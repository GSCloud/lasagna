1658673638
AwuilbDvXz%3Adf0c5f78e64cf0f7cacf00048f9ba0aa-1f3482decf6b49549fa5dfc03dd6802f
s:19348:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6ODU6IlJhbmRvbV8qIENvbXBhdGliaWxpdHkgTGlicmFyeQpmb3IgdXNpbmcgdGhlIG5ldyBQSFAgNyByYW5kb21fKiBBUEkgaW4gUEhQIDUgcHJvamVjdHMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTEwMzoiVGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE4IFBhcmFnb24gSW5pdGlhdGl2ZSBFbnRlcnByaXNlcwoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQpvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAppbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgphbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLApGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUKQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgpMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLApPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRQpTT0ZUV0FSRS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjFmMzQ4MmRlY2Y2YjQ5NTQ5ZmE1ZGZjMDNkZDY4MDJmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6Mjg6InJhbmRvbV9ieXRlc19kZXZfdXJhbmRvbS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo2MzoidmVuZG9yL3BhcmFnb25pZS9yYW5kb21fY29tcGF0L2xpYi9yYW5kb21fYnl0ZXNfZGV2X3VyYW5kb20ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo2NDU0OiI8P3BocAovKioKICogUmFuZG9tXyogQ29tcGF0aWJpbGl0eSBMaWJyYXJ5CiAqIGZvciB1c2luZyB0aGUgbmV3IFBIUCA3IHJhbmRvbV8qIEFQSSBpbiBQSFAgNSBwcm9qZWN0cwogKgogKiBUaGUgTUlUIExpY2Vuc2UgKE1JVCkKICoKICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAxOCBQYXJhZ29uIEluaXRpYXRpdmUgRW50ZXJwcmlzZXMKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQogKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAogKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CiAqCiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgogKgogKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgogKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUKICogU09GVFdBUkUuCiAqLwoKaWYgKCFkZWZpbmVkKCdSQU5ET01fQ09NUEFUX1JFQURfQlVGRkVSJykpIHsKICAgIGRlZmluZSgnUkFORE9NX0NPTVBBVF9SRUFEX0JVRkZFUicsIDgpOwp9CgppZiAoIWlzX2NhbGxhYmxlKCdyYW5kb21fYnl0ZXMnKSkgewogICAgLyoqCiAgICAgKiBVbmxlc3Mgb3Blbl9iYXNlZGlyIGlzIGVuYWJsZWQsIHVzZSAvZGV2L3VyYW5kb20gZm9yCiAgICAgKiByYW5kb20gbnVtYmVycyBpbiBhY2NvcmRhbmNlIHdpdGggYmVzdCBwcmFjdGljZXMKICAgICAqCiAgICAgKiBXaHkgd2UgdXNlIC9kZXYvdXJhbmRvbSBhbmQgbm90IC9kZXYvcmFuZG9tCiAgICAgKiBAcmVmIGh0dHBzOi8vd3d3LjJ1by5kZS9teXRocy1hYm91dC11cmFuZG9tCiAgICAgKiBAcmVmIGh0dHA6Ly9zb2NrcHVwcGV0Lm9yZy9ibG9nLzIwMTQvMDIvMjUvc2FmZWx5LWdlbmVyYXRlLXJhbmRvbS1udW1iZXJzCiAgICAgKgogICAgICogQHBhcmFtIGludCAkYnl0ZXMKICAgICAqCiAgICAgKiBAdGhyb3dzIEV4Y2VwdGlvbgogICAgICoKICAgICAqIEByZXR1cm4gc3RyaW5nCiAgICAgKi8KICAgIGZ1bmN0aW9uIHJhbmRvbV9ieXRlcygkYnl0ZXMpCiAgICB7CiAgICAgICAgLyoqIEB2YXIgcmVzb3VyY2UgJGZwICovCiAgICAgICAgc3RhdGljICRmcCA9IG51bGw7CgogICAgICAgIC8qKgogICAgICAgICAqIFRoaXMgYmxvY2sgc2hvdWxkIG9ubHkgYmUgcnVuIG9uY2UKICAgICAgICAgKi8KICAgICAgICBpZiAoZW1wdHkoJGZwKSkgewogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogV2UgZG9uJ3Qgd2FudCB0byBldmVyIHJlYWQgQzpcZGV2XHJhbmRvbSwgb25seSAvZGV2L3VyYW5kb20gb24KICAgICAgICAgICAgICogVW5peC1saWtlIG9wZXJhdGluZyBzeXN0ZW1zLiBXaGlsZSB3ZSBndWFyZCBhZ2FpbnN0IHRoaXMKICAgICAgICAgICAgICogY29uZGl0aW9uIGluIHJhbmRvbS5waHAsIGl0IGRvZXNuJ3QgaHVydCB0byBiZSBkZWZlbnNpdmUgaW4gZGVwdGgKICAgICAgICAgICAgICogaGVyZS4KICAgICAgICAgICAgICoKICAgICAgICAgICAgICogVG8gdGhhdCBlbmQsIHdlIG9ubHkgdHJ5IHRvIG9wZW4gL2Rldi91cmFuZG9tIGlmIHdlJ3JlIG9uIGEgVW5peC0KICAgICAgICAgICAgICogbGlrZSBvcGVyYXRpbmcgc3lzdGVtICh3aGljaCBtZWFucyB0aGUgZGlyZWN0b3J5IHNlcGFyYXRvciBpcyBzZXQKICAgICAgICAgICAgICogdG8gIi8iIG5vdCAiXCIuCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBpZiAoRElSRUNUT1JZX1NFUEFSQVRPUiA9PT0gJy8nKSB7CiAgICAgICAgICAgICAgICBpZiAoIWlzX3JlYWRhYmxlKCcvZGV2L3VyYW5kb20nKSkgewogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICdFbnZpcm9ubWVudCBtaXNjb25maWd1cmF0aW9uOiAnIC4KICAgICAgICAgICAgICAgICAgICAgICAgJy9kZXYvdXJhbmRvbSBjYW5ub3QgYmUgcmVhZC4nCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAgICogV2UgdXNlIC9kZXYvdXJhbmRvbSBpZiBpdCBpcyBhIGNoYXIgZGV2aWNlLgogICAgICAgICAgICAgICAgICogV2UgbmV2ZXIgZmFsbCBiYWNrIHRvIC9kZXYvcmFuZG9tCiAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgIC8qKiBAdmFyIHJlc291cmNlfGJvb2wgJGZwICovCiAgICAgICAgICAgICAgICAkZnAgPSBmb3BlbignL2Rldi91cmFuZG9tJywgJ3JiJyk7CiAgICAgICAgICAgICAgICBpZiAoaXNfcmVzb3VyY2UoJGZwKSkgewogICAgICAgICAgICAgICAgICAgIC8qKiBAdmFyIGFycmF5PHN0cmluZywgaW50PiAkc3QgKi8KICAgICAgICAgICAgICAgICAgICAkc3QgPSBmc3RhdCgkZnApOwogICAgICAgICAgICAgICAgICAgIGlmICgoJHN0Wydtb2RlJ10gJiAwMTcwMDAwKSAhPT0gMDIwMDAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZjbG9zZSgkZnApOwogICAgICAgICAgICAgICAgICAgICAgICAkZnAgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpc19yZXNvdXJjZSgkZnApKSB7CiAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAqIHN0cmVhbV9zZXRfcmVhZF9idWZmZXIoKSBkb2VzIG5vdCBleGlzdCBpbiBISFZNCiAgICAgICAgICAgICAgICAgKgogICAgICAgICAgICAgICAgICogSWYgd2UgZG9uJ3Qgc2V0IHRoZSBzdHJlYW0ncyByZWFkIGJ1ZmZlciB0byAwLCBQSFAgd2lsbAogICAgICAgICAgICAgICAgICogaW50ZXJuYWxseSBidWZmZXIgODE5MiBieXRlcywgd2hpY2ggY2FuIHdhc3RlIGVudHJvcHkKICAgICAgICAgICAgICAgICAqCiAgICAgICAgICAgICAgICAgKiBzdHJlYW1fc2V0X3JlYWRfYnVmZmVyIHJldHVybnMgMCBvbiBzdWNjZXNzCiAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgIGlmIChpc19jYWxsYWJsZSgnc3RyZWFtX3NldF9yZWFkX2J1ZmZlcicpKSB7CiAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3NldF9yZWFkX2J1ZmZlcigkZnAsIFJBTkRPTV9DT01QQVRfUkVBRF9CVUZGRVIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKGlzX2NhbGxhYmxlKCdzdHJlYW1fc2V0X2NodW5rX3NpemUnKSkgewogICAgICAgICAgICAgICAgICAgIHN0cmVhbV9zZXRfY2h1bmtfc2l6ZSgkZnAsIFJBTkRPTV9DT01QQVRfUkVBRF9CVUZGRVIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0cnkgewogICAgICAgICAgICAvKiogQHZhciBpbnQgJGJ5dGVzICovCiAgICAgICAgICAgICRieXRlcyA9IFJhbmRvbUNvbXBhdF9pbnR2YWwoJGJ5dGVzKTsKICAgICAgICB9IGNhdGNoIChUeXBlRXJyb3IgJGV4KSB7CiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoCiAgICAgICAgICAgICAgICAncmFuZG9tX2J5dGVzKCk6ICRieXRlcyBtdXN0IGJlIGFuIGludGVnZXInCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICBpZiAoJGJ5dGVzIDwgMSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgICAgICAgICAnTGVuZ3RoIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAnCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICAvKioKICAgICAgICAgKiBUaGlzIGlmKCkgYmxvY2sgb25seSBydW5zIGlmIHdlIG1hbmFnZWQgdG8gb3BlbiBhIGZpbGUgaGFuZGxlCiAgICAgICAgICoKICAgICAgICAgKiBJdCBkb2VzIG5vdCBiZWxvbmcgaW4gYW4gZWxzZSB7fSBibG9jaywgYmVjYXVzZSB0aGUgYWJvdmUKICAgICAgICAgKiBpZiAoZW1wdHkoJGZwKSkgbGluZSBpcyBsb2dpYyB0aGF0IHNob3VsZCBvbmx5IGJlIHJ1biBvbmNlIHBlcgogICAgICAgICAqIHBhZ2UgbG9hZC4KICAgICAgICAgKi8KICAgICAgICBpZiAoaXNfcmVzb3VyY2UoJGZwKSkgewogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogQHZhciBpbnQKICAgICAgICAgICAgICovCiAgICAgICAgICAgICRyZW1haW5pbmcgPSAkYnl0ZXM7CgogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogQHZhciBzdHJpbmd8Ym9vbAogICAgICAgICAgICAgKi8KICAgICAgICAgICAgJGJ1ZiA9ICcnOwoKICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAqIFdlIHVzZSBmcmVhZCgpIGluIGEgbG9vcCB0byBwcm90ZWN0IGFnYWluc3QgcGFydGlhbCByZWFkcwogICAgICAgICAgICAgKi8KICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAgICAgKiBAdmFyIHN0cmluZ3xib29sCiAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgICRyZWFkID0gZnJlYWQoJGZwLCAkcmVtYWluaW5nKTsKICAgICAgICAgICAgICAgIGlmICghaXNfc3RyaW5nKCRyZWFkKSkgewogICAgICAgICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAgICAgICAqIFdlIGNhbm5vdCBzYWZlbHkgcmVhZCBmcm9tIHRoZSBmaWxlLiBFeGl0IHRoZQogICAgICAgICAgICAgICAgICAgICAqIGRvLXdoaWxlIGxvb3AgYW5kIHRyaWdnZXIgdGhlIGV4Y2VwdGlvbiBjb25kaXRpb24KICAgICAgICAgICAgICAgICAgICAgKgogICAgICAgICAgICAgICAgICAgICAqIEB2YXIgc3RyaW5nfGJvb2wKICAgICAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgICAgICAkYnVmID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAqIERlY3JlYXNlIHRoZSBudW1iZXIgb2YgYnl0ZXMgcmV0dXJuZWQgZnJvbSByZW1haW5pbmcKICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgJHJlbWFpbmluZyAtPSBSYW5kb21Db21wYXRfc3RybGVuKCRyZWFkKTsKICAgICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAgICogQHZhciBzdHJpbmcgJGJ1ZgogICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICAkYnVmIC49ICRyZWFkOwogICAgICAgICAgICB9IHdoaWxlICgkcmVtYWluaW5nID4gMCk7CgogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogSXMgb3VyIHJlc3VsdCB2YWxpZD8KICAgICAgICAgICAgICogQHZhciBzdHJpbmd8Ym9vbCAkYnVmCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBpZiAoaXNfc3RyaW5nKCRidWYpKSB7CiAgICAgICAgICAgICAgICBpZiAoUmFuZG9tQ29tcGF0X3N0cmxlbigkYnVmKSA9PT0gJGJ5dGVzKSB7CiAgICAgICAgICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAgICAgICAgICogUmV0dXJuIG91ciByYW5kb20gZW50cm9weSBidWZmZXIgaGVyZToKICAgICAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGJ1ZjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLyoqCiAgICAgICAgICogSWYgd2UgcmVhY2ggaGVyZSwgUEhQIGhhcyBmYWlsZWQgdXMuCiAgICAgICAgICovCiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigKICAgICAgICAgICAgJ0Vycm9yIHJlYWRpbmcgZnJvbSBzb3VyY2UgZGV2aWNlJwogICAgICAgICk7CiAgICB9Cn0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjE6e3M6MTU6IlxyYW5kb21fYnl0ZXMoKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjU6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE1OiJccmFuZG9tX2J5dGVzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoicmFuZG9tX2J5dGVzIjt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJieXRlcyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjEwMToiVW5sZXNzIG9wZW5fYmFzZWRpciBpcyBlbmFibGVkLCB1c2UgL2Rldi91cmFuZG9tIGZvcgpyYW5kb20gbnVtYmVycyBpbiBhY2NvcmRhbmNlIHdpdGggYmVzdCBwcmFjdGljZXMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NDM6IldoeSB3ZSB1c2UgL2Rldi91cmFuZG9tIGFuZCBub3QgL2Rldi9yYW5kb20iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTo1OntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjM6InJlZiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Mzg6Imh0dHBzOi8vd3d3LjJ1by5kZS9teXRocy1hYm91dC11cmFuZG9tIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czozOiJyZWYiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjY4OiJodHRwOi8vc29ja3B1cHBldC5vcmcvYmxvZy8yMDE0LzAyLzI1L3NhZmVseS1nZW5lcmF0ZS1yYW5kb20tbnVtYmVycyI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo1OiJieXRlcyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjM7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGhyb3dzIjozOntzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMDoiXEV4Y2VwdGlvbiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IkV4Y2VwdGlvbiI7fX1zOjc6IgAqAG5hbWUiO3M6NjoidGhyb3dzIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjQ7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjE6e3M6MjY6IlxSQU5ET01fQ09NUEFUX1JFQURfQlVGRkVSIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50Ijo1OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI2OiJcUkFORE9NX0NPTVBBVF9SRUFEX0JVRkZFUiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI1OiJSQU5ET01fQ09NUEFUX1JFQURfQlVGRkVSIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZG9jQmxvY2siO047czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmFsdWUiO3M6MToiOCI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";