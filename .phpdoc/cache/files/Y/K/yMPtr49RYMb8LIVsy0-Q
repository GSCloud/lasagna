1658673628
AwuilbDvXz%3Abadbe5222955ea7aa2f56d3abb29202e-2f89f9396f0fd9b9994344d5d7481086
s:109524:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"2f89f9396f0fd9b9994344d5d7481086";s:39:" phpDocumentor\Reflection\Php\File name";s:15:"RetryConfig.php";s:39:" phpDocumentor\Reflection\Php\File path";s:53:"vendor/google/cloud/Tasks/src/V2beta3/RetryConfig.php";s:41:" phpDocumentor\Reflection\Php\File source";s:21955:"<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tasks/v2beta3/queue.proto

namespace Google\Cloud\Tasks\V2beta3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Retry config.
 * These settings determine when a failed task attempt is retried.
 *
 * Generated from protobuf message <code>google.cloud.tasks.v2beta3.RetryConfig</code>
 */
class RetryConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of attempts per task.
     * Cloud Tasks will attempt the task `max_attempts` times (that is, if the
     * first attempt fails, then there will be `max_attempts - 1` retries). Must
     * be >= -1.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * -1 indicates unlimited attempts.
     * This field has the same meaning as
     * [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_attempts = 1;</code>
     */
    private $max_attempts = 0;
    /**
     * If positive, `max_retry_duration` specifies the time limit for
     * retrying a failed task, measured from when the task was first
     * attempted. Once `max_retry_duration` time has passed *and* the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times, no further attempts will be made and the task will be
     * deleted.
     * If zero, then the task age is unlimited.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_retry_duration` will be truncated to the nearest second.
     * This field has the same meaning as
     * [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>
     */
    private $max_retry_duration = null;
    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `min_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>
     */
    private $min_backoff = null;
    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>
     */
    private $max_backoff = null;
    /**
     * The time between retries will double `max_doublings` times.
     * A task's retry interval starts at
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
     * `max_doublings` times, then increases linearly, and finally
     * retries retries at intervals of
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
     * [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
     * For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
     * `max_doublings` is 3, then the a task will first be retried in
     * 10s. The retry interval will double three times, and then
     * increase linearly by 2^3 * 10s.  Finally, the task will retry at
     * intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
     * 240s, 300s, 300s, ....
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * This field has the same meaning as
     * [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_doublings = 5;</code>
     */
    private $max_doublings = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_attempts
     *           Number of attempts per task.
     *           Cloud Tasks will attempt the task `max_attempts` times (that is, if the
     *           first attempt fails, then there will be `max_attempts - 1` retries). Must
     *           be >= -1.
     *           If unspecified when the queue is created, Cloud Tasks will pick the
     *           default.
     *           -1 indicates unlimited attempts.
     *           This field has the same meaning as
     *           [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *     @type \Google\Protobuf\Duration $max_retry_duration
     *           If positive, `max_retry_duration` specifies the time limit for
     *           retrying a failed task, measured from when the task was first
     *           attempted. Once `max_retry_duration` time has passed *and* the
     *           task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     *           times, no further attempts will be made and the task will be
     *           deleted.
     *           If zero, then the task age is unlimited.
     *           If unspecified when the queue is created, Cloud Tasks will pick the
     *           default.
     *           `max_retry_duration` will be truncated to the nearest second.
     *           This field has the same meaning as
     *           [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *     @type \Google\Protobuf\Duration $min_backoff
     *           A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     *           [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     *           [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     *           if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     *           retried.
     *           If unspecified when the queue is created, Cloud Tasks will pick the
     *           default.
     *           `min_backoff` will be truncated to the nearest second.
     *           This field has the same meaning as
     *           [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *     @type \Google\Protobuf\Duration $max_backoff
     *           A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     *           [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     *           [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     *           if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     *           retried.
     *           If unspecified when the queue is created, Cloud Tasks will pick the
     *           default.
     *           `max_backoff` will be truncated to the nearest second.
     *           This field has the same meaning as
     *           [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *     @type int $max_doublings
     *           The time between retries will double `max_doublings` times.
     *           A task's retry interval starts at
     *           [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
     *           `max_doublings` times, then increases linearly, and finally
     *           retries retries at intervals of
     *           [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
     *           [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
     *           For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
     *           [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
     *           `max_doublings` is 3, then the a task will first be retried in
     *           10s. The retry interval will double three times, and then
     *           increase linearly by 2^3 * 10s.  Finally, the task will retry at
     *           intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
     *           task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     *           times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
     *           240s, 300s, 300s, ....
     *           If unspecified when the queue is created, Cloud Tasks will pick the
     *           default.
     *           This field has the same meaning as
     *           [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Tasks\V2Beta3\Queue::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of attempts per task.
     * Cloud Tasks will attempt the task `max_attempts` times (that is, if the
     * first attempt fails, then there will be `max_attempts - 1` retries). Must
     * be >= -1.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * -1 indicates unlimited attempts.
     * This field has the same meaning as
     * [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_attempts = 1;</code>
     * @return int
     */
    public function getMaxAttempts()
    {
        return $this->max_attempts;
    }

    /**
     * Number of attempts per task.
     * Cloud Tasks will attempt the task `max_attempts` times (that is, if the
     * first attempt fails, then there will be `max_attempts - 1` retries). Must
     * be >= -1.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * -1 indicates unlimited attempts.
     * This field has the same meaning as
     * [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_attempts = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxAttempts($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_attempts = $var;

        return $this;
    }

    /**
     * If positive, `max_retry_duration` specifies the time limit for
     * retrying a failed task, measured from when the task was first
     * attempted. Once `max_retry_duration` time has passed *and* the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times, no further attempts will be made and the task will be
     * deleted.
     * If zero, then the task age is unlimited.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_retry_duration` will be truncated to the nearest second.
     * This field has the same meaning as
     * [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getMaxRetryDuration()
    {
        return $this->max_retry_duration;
    }

    /**
     * If positive, `max_retry_duration` specifies the time limit for
     * retrying a failed task, measured from when the task was first
     * attempted. Once `max_retry_duration` time has passed *and* the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times, no further attempts will be made and the task will be
     * deleted.
     * If zero, then the task age is unlimited.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_retry_duration` will be truncated to the nearest second.
     * This field has the same meaning as
     * [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxRetryDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_retry_duration = $var;

        return $this;
    }

    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `min_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getMinBackoff()
    {
        return $this->min_backoff;
    }

    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `min_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMinBackoff($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->min_backoff = $var;

        return $this;
    }

    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getMaxBackoff()
    {
        return $this->max_backoff;
    }

    /**
     * A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
     * if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
     * retried.
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * `max_backoff` will be truncated to the nearest second.
     * This field has the same meaning as
     * [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxBackoff($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_backoff = $var;

        return $this;
    }

    /**
     * The time between retries will double `max_doublings` times.
     * A task's retry interval starts at
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
     * `max_doublings` times, then increases linearly, and finally
     * retries retries at intervals of
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
     * [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
     * For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
     * `max_doublings` is 3, then the a task will first be retried in
     * 10s. The retry interval will double three times, and then
     * increase linearly by 2^3 * 10s.  Finally, the task will retry at
     * intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
     * 240s, 300s, 300s, ....
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * This field has the same meaning as
     * [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_doublings = 5;</code>
     * @return int
     */
    public function getMaxDoublings()
    {
        return $this->max_doublings;
    }

    /**
     * The time between retries will double `max_doublings` times.
     * A task's retry interval starts at
     * [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
     * `max_doublings` times, then increases linearly, and finally
     * retries retries at intervals of
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
     * [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
     * For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
     * [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
     * `max_doublings` is 3, then the a task will first be retried in
     * 10s. The retry interval will double three times, and then
     * increase linearly by 2^3 * 10s.  Finally, the task will retry at
     * intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
     * task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
     * times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
     * 240s, 300s, 300s, ....
     * If unspecified when the queue is created, Cloud Tasks will pick the
     * default.
     * This field has the same meaning as
     * [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
     *
     * Generated from protobuf field <code>int32 max_doublings = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxDoublings($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_doublings = $var;

        return $this;
    }

}

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:27:"\Google\Cloud\Tasks\V2beta3";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Google\Cloud\Tasks\V2beta3";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"V2beta3";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:39:"\Google\Cloud\Tasks\V2beta3\RetryConfig";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\Google\Cloud\Tasks\V2beta3\RetryConfig";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"RetryConfig";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"Retry config.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:148:"These settings determine when a failed task attempt is retried.

Generated from protobuf message <code>google.cloud.tasks.v2beta3.RetryConfig</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:26:"Google\Cloud\Tasks\V2beta3";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:3:{s:7:"GPBType";s:32:"Google\Protobuf\Internal\GPBType";s:13:"RepeatedField";s:38:"Google\Protobuf\Internal\RepeatedField";s:7:"GPBUtil";s:32:"Google\Protobuf\Internal\GPBUtil";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Google\Protobuf\Internal\Message";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Message";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:5:{s:54:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_attempts";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_attempts";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"max_attempts";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Number of attempts per task.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:496:"Cloud Tasks will attempt the task `max_attempts` times (that is, if the
first attempt fails, then there will be `max_attempts - 1` retries). Must
be >= -1.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
-1 indicates unlimited attempts.
This field has the same meaning as
[task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_attempts = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:1:"0";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:32;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:60:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_retry_duration";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_retry_duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"max_retry_duration";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:349:"If positive, `max_retry_duration` specifies the time limit for
retrying a failed task, measured from when the task was first
attempted. Once `max_retry_duration` time has passed *and* the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times, no further attempts will be made and the task will be
deleted.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:434:"If zero, then the task age is unlimited.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_retry_duration` will be truncated to the nearest second.
This field has the same meaning as
[task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:4:"null";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:49;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:53:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$min_backoff";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$min_backoff";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"min_backoff";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`min_backoff` will be truncated to the nearest second.
This field has the same meaning as
[min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:4:"null";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:64;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:53:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_backoff";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_backoff";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"max_backoff";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_backoff` will be truncated to the nearest second.
This field has the same meaning as
[max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:4:"null";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:79;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:55:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_doublings";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Google\Cloud\Tasks\V2beta3\RetryConfig::$max_doublings";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"max_doublings";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"The time between retries will double `max_doublings` times.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:1283:"A task's retry interval starts at
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
`max_doublings` times, then increases linearly, and finally
retries retries at intervals of
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
[max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
`max_doublings` is 3, then the a task will first be retried in
10s. The retry interval will double three times, and then
increase linearly by 2^3 * 10s.  Finally, the task will retry at
intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
240s, 300s, 300s, ....
If unspecified when the queue is created, Cloud Tasks will pick the
default.
This field has the same meaning as
[max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_doublings = 5;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:1:"0";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:104;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:11:{s:54:"\Google\Cloud\Tasks\V2beta3\RetryConfig::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"Constructor.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:4629:"{
    Optional. Data for populating the Message object.

    @type int $max_attempts
          Number of attempts per task.
          Cloud Tasks will attempt the task `max_attempts` times (that is, if the
          first attempt fails, then there will be `max_attempts - 1` retries). Must
          be >= -1.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default.
          -1 indicates unlimited attempts.
          This field has the same meaning as
          [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
    @type \Google\Protobuf\Duration $max_retry_duration
          If positive, `max_retry_duration` specifies the time limit for
          retrying a failed task, measured from when the task was first
          attempted. Once `max_retry_duration` time has passed *and* the
          task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
          times, no further attempts will be made and the task will be
          deleted.
          If zero, then the task age is unlimited.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default.
          `max_retry_duration` will be truncated to the nearest second.
          This field has the same meaning as
          [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
    @type \Google\Protobuf\Duration $min_backoff
          A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
          [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
          [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
          if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
          retried.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default.
          `min_backoff` will be truncated to the nearest second.
          This field has the same meaning as
          [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
    @type \Google\Protobuf\Duration $max_backoff
          A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
          [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
          [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
          if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
          retried.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default.
          `max_backoff` will be truncated to the nearest second.
          This field has the same meaning as
          [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
    @type int $max_doublings
          The time between retries will double `max_doublings` times.
          A task's retry interval starts at
          [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
          `max_doublings` times, then increases linearly, and finally
          retries retries at intervals of
          [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
          [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
          For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
          [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
          `max_doublings` is 3, then the a task will first be retried in
          10s. The retry interval will double three times, and then
          increase linearly by 2^3 * 10s.  Finally, the task will retry at
          intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
          task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
          times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
          240s, 300s, 300s, ....
          If unspecified when the queue is created, Cloud Tasks will pick the
          default.
          This field has the same meaning as
          [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
}";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\Google\Cloud\Tasks\V2beta3\RetryConfig::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"NULL";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:180;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:57:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxAttempts()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Number of attempts per task.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:496:"Cloud Tasks will attempt the task `max_attempts` times (that is, if the
first attempt fails, then there will be `max_attempts - 1` retries). Must
be >= -1.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
-1 indicates unlimited attempts.
This field has the same meaning as
[task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_attempts = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxAttempts()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"getMaxAttempts";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:199;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:57:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxAttempts()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Number of attempts per task.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:496:"Cloud Tasks will attempt the task `max_attempts` times (that is, if the
first attempt fails, then there will be `max_attempts - 1` retries). Must
be >= -1.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
-1 indicates unlimited attempts.
This field has the same meaning as
[task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_attempts = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxAttempts()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"setMaxAttempts";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:219;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:62:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxRetryDuration()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:349:"If positive, `max_retry_duration` specifies the time limit for
retrying a failed task, measured from when the task was first
attempted. Once `max_retry_duration` time has passed *and* the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times, no further attempts will be made and the task will be
deleted.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:434:"If zero, then the task age is unlimited.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_retry_duration` will be truncated to the nearest second.
This field has the same meaning as
[task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:62:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxRetryDuration()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"getMaxRetryDuration";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:244;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:62:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxRetryDuration()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:349:"If positive, `max_retry_duration` specifies the time limit for
retrying a failed task, measured from when the task was first
attempted. Once `max_retry_duration` time has passed *and* the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times, no further attempts will be made and the task will be
deleted.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:434:"If zero, then the task age is unlimited.
If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_retry_duration` will be truncated to the nearest second.
This field has the same meaning as
[task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_retry_duration = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:62:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxRetryDuration()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"setMaxRetryDuration";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:267;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMinBackoff()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`min_backoff` will be truncated to the nearest second.
This field has the same meaning as
[min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMinBackoff()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"getMinBackoff";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:290;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMinBackoff()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`min_backoff` will be truncated to the nearest second.
This field has the same meaning as
[min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration min_backoff = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMinBackoff()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"setMinBackoff";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:311;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxBackoff()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_backoff` will be truncated to the nearest second.
This field has the same meaning as
[max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxBackoff()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"getMaxBackoff";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:334;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxBackoff()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:364:"A task will be [scheduled][google.cloud.tasks.v2beta3.Task.schedule_time] for retry between
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] and
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] duration after it fails,
if the queue's [RetryConfig][google.cloud.tasks.v2beta3.RetryConfig] specifies that the task should be
retried.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:384:"If unspecified when the queue is created, Cloud Tasks will pick the
default.
`max_backoff` will be truncated to the nearest second.
This field has the same meaning as
[max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>.google.protobuf.Duration max_backoff = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\Google\Protobuf\Duration";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Duration";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxBackoff()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"setMaxBackoff";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:355;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxDoublings()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"The time between retries will double `max_doublings` times.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:1283:"A task's retry interval starts at
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
`max_doublings` times, then increases linearly, and finally
retries retries at intervals of
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
[max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
`max_doublings` is 3, then the a task will first be retried in
10s. The retry interval will double three times, and then
increase linearly by 2^3 * 10s.  Finally, the task will retry at
intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
240s, 300s, 300s, ....
If unspecified when the queue is created, Cloud Tasks will pick the
default.
This field has the same meaning as
[max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_doublings = 5;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta3\RetryConfig::getMaxDoublings()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getMaxDoublings";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:388;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxDoublings()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"The time between retries will double `max_doublings` times.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:1283:"A task's retry interval starts at
[min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff], then doubles
`max_doublings` times, then increases linearly, and finally
retries retries at intervals of
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] up to
[max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts] times.
For example, if [min_backoff][google.cloud.tasks.v2beta3.RetryConfig.min_backoff] is 10s,
[max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] is 300s, and
`max_doublings` is 3, then the a task will first be retried in
10s. The retry interval will double three times, and then
increase linearly by 2^3 * 10s.  Finally, the task will retry at
intervals of [max_backoff][google.cloud.tasks.v2beta3.RetryConfig.max_backoff] until the
task has been attempted [max_attempts][google.cloud.tasks.v2beta3.RetryConfig.max_attempts]
times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
240s, 300s, 300s, ....
If unspecified when the queue is created, Cloud Tasks will pick the
default.
This field has the same meaning as
[max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).

Generated from protobuf field <code>int32 max_doublings = 5;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta3\RetryConfig::setMaxDoublings()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"setMaxDoublings";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:419;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";