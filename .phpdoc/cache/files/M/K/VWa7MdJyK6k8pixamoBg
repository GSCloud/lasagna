1658673627
AwuilbDvXz%3A1a3c93b184cce37b9279d60fb8e8bc4a-0bafa9f0c8ee1bd5e98ba7910aa4581f
s:79088:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjBiYWZhOWYwYzhlZTFiZDVlOThiYTc5MTBhYTQ1ODFmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTQ6IlJhdGVMaW1pdHMucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTI6InZlbmRvci9nb29nbGUvY2xvdWQvVGFza3Mvc3JjL1YyYmV0YTIvUmF0ZUxpbWl0cy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjE3NTE5OiI8P3BocAojIEdlbmVyYXRlZCBieSB0aGUgcHJvdG9jb2wgYnVmZmVyIGNvbXBpbGVyLiAgRE8gTk9UIEVESVQhCiMgc291cmNlOiBnb29nbGUvY2xvdWQvdGFza3MvdjJiZXRhMi9xdWV1ZS5wcm90bwoKbmFtZXNwYWNlIEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyOwoKdXNlIEdvb2dsZVxQcm90b2J1ZlxJbnRlcm5hbFxHUEJUeXBlOwp1c2UgR29vZ2xlXFByb3RvYnVmXEludGVybmFsXFJlcGVhdGVkRmllbGQ7CnVzZSBHb29nbGVcUHJvdG9idWZcSW50ZXJuYWxcR1BCVXRpbDsKCi8qKgogKiBSYXRlIGxpbWl0cy4KICogVGhpcyBtZXNzYWdlIGRldGVybWluZXMgdGhlIG1heGltdW0gcmF0ZSB0aGF0IHRhc2tzIGNhbiBiZSBkaXNwYXRjaGVkIGJ5IGEKICogcXVldWUsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgZGlzcGF0Y2ggaXMgYSBmaXJzdCB0YXNrIGF0dGVtcHQgb3IgYSByZXRyeS4KICogTm90ZTogVGhlIGRlYnVnZ2luZyBjb21tYW5kLCBbUnVuVGFza11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5SdW5UYXNrXSwgd2lsbCBydW4gYSB0YXNrCiAqIGV2ZW4gaWYgdGhlIHF1ZXVlIGhhcyByZWFjaGVkIGl0cyBbUmF0ZUxpbWl0c11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0c10uCiAqCiAqIEdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIG1lc3NhZ2UgPGNvZGU+Z29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0czwvY29kZT4KICovCmNsYXNzIFJhdGVMaW1pdHMgZXh0ZW5kcyBcR29vZ2xlXFByb3RvYnVmXEludGVybmFsXE1lc3NhZ2UKewogICAgLyoqCiAgICAgKiBUaGUgbWF4aW11bSByYXRlIGF0IHdoaWNoIHRhc2tzIGFyZSBkaXNwYXRjaGVkIGZyb20gdGhpcyBxdWV1ZS4KICAgICAqIElmIHVuc3BlY2lmaWVkIHdoZW4gdGhlIHF1ZXVlIGlzIGNyZWF0ZWQsIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUKICAgICAqIGRlZmF1bHQuCiAgICAgKiAqIEZvciBbQXBwIEVuZ2luZSBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkFwcEVuZ2luZUh0dHBUYXJnZXRdLCB0aGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlCiAgICAgKiAgIGlzIDUwMC4KICAgICAqICogVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSAgIGZvciBbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdLiBJbiBhZGRpdGlvbiB0byB0aGUKICAgICAqICAgYG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRgIGxpbWl0LCBhIG1heGltdW0gb2YgMTAgUVBTIG9mCiAgICAgKiAgIFtMZWFzZVRhc2tzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5DbG91ZFRhc2tzLkxlYXNlVGFza3NdIHJlcXVlc3RzIGFyZSBhbGxvd2VkIHBlciBwdWxsIHF1ZXVlLgogICAgICogVGhpcyBmaWVsZCBoYXMgdGhlIHNhbWUgbWVhbmluZyBhcwogICAgICogW3JhdGUgaW4gcXVldWUueWFtbC94bWxdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI3JhdGUpLgogICAgICoKICAgICAqIEdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIGZpZWxkIDxjb2RlPmRvdWJsZSBtYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kID0gMTs8L2NvZGU+CiAgICAgKi8KICAgIHByaXZhdGUgJG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmQgPSAwLjA7CiAgICAvKioKICAgICAqIE91dHB1dCBvbmx5LiBUaGUgbWF4IGJ1cnN0IHNpemUuCiAgICAgKiBNYXggYnVyc3Qgc2l6ZSBsaW1pdHMgaG93IGZhc3QgdGFza3MgaW4gcXVldWUgYXJlIHByb2Nlc3NlZCB3aGVuCiAgICAgKiBtYW55IHRhc2tzIGFyZSBpbiB0aGUgcXVldWUgYW5kIHRoZSByYXRlIGlzIGhpZ2guIFRoaXMgZmllbGQKICAgICAqIGFsbG93cyB0aGUgcXVldWUgdG8gaGF2ZSBhIGhpZ2ggcmF0ZSBzbyBwcm9jZXNzaW5nIHN0YXJ0cyBzaG9ydGx5CiAgICAgKiBhZnRlciBhIHRhc2sgaXMgZW5xdWV1ZWQsIGJ1dCBzdGlsbCBsaW1pdHMgcmVzb3VyY2UgdXNhZ2Ugd2hlbgogICAgICogbWFueSB0YXNrcyBhcmUgZW5xdWV1ZWQgaW4gYSBzaG9ydCBwZXJpb2Qgb2YgdGltZS4KICAgICAqIFRoZSBbdG9rZW4gYnVja2V0XShodHRwczovL3dpa2lwZWRpYS5vcmcvd2lraS9Ub2tlbl9CdWNrZXQpCiAgICAgKiBhbGdvcml0aG0gaXMgdXNlZCB0byBjb250cm9sIHRoZSByYXRlIG9mIHRhc2sgZGlzcGF0Y2hlcy4gRWFjaAogICAgICogcXVldWUgaGFzIGEgdG9rZW4gYnVja2V0IHRoYXQgaG9sZHMgdG9rZW5zLCB1cCB0byB0aGUgbWF4aW11bQogICAgICogc3BlY2lmaWVkIGJ5IGBtYXhfYnVyc3Rfc2l6ZWAuIEVhY2ggdGltZSBhIHRhc2sgaXMgZGlzcGF0Y2hlZCwgYQogICAgICogdG9rZW4gaXMgcmVtb3ZlZCBmcm9tIHRoZSBidWNrZXQuIFRhc2tzIHdpbGwgYmUgZGlzcGF0Y2hlZCB1bnRpbAogICAgICogdGhlIHF1ZXVlJ3MgYnVja2V0IHJ1bnMgb3V0IG9mIHRva2Vucy4gVGhlIGJ1Y2tldCB3aWxsIGJlCiAgICAgKiBjb250aW51b3VzbHkgcmVmaWxsZWQgd2l0aCBuZXcgdG9rZW5zIGJhc2VkIG9uCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXS4KICAgICAqIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUgdmFsdWUgb2YgYG1heF9idXJzdF9zaXplYCBiYXNlZCBvbiB0aGUKICAgICAqIHZhbHVlIG9mCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXS4KICAgICAqIEZvciBBcHAgRW5naW5lIHF1ZXVlcyB0aGF0IHdlcmUgY3JlYXRlZCBvciB1cGRhdGVkIHVzaW5nCiAgICAgKiBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIGlzIGVxdWFsIHRvCiAgICAgKiBbYnVja2V0X3NpemVdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI2J1Y2tldF9zaXplKS4KICAgICAqIFNpbmNlIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgb3V0cHV0IG9ubHksIGlmCiAgICAgKiBbVXBkYXRlUXVldWVdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuVXBkYXRlUXVldWVdIGlzIGNhbGxlZCBvbiBhIHF1ZXVlCiAgICAgKiBjcmVhdGVkIGJ5IGBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgd2lsbCBiZSByZXNldCBiYXNlZAogICAgICogb24gdGhlIHZhbHVlIG9mCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXSwKICAgICAqIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlcgogICAgICogW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0KICAgICAqIGlzIHVwZGF0ZWQuCiAgICAgKgogICAgICogR2VuZXJhdGVkIGZyb20gcHJvdG9idWYgZmllbGQgPGNvZGU+aW50MzIgbWF4X2J1cnN0X3NpemUgPSAyOzwvY29kZT4KICAgICAqLwogICAgcHJpdmF0ZSAkbWF4X2J1cnN0X3NpemUgPSAwOwogICAgLyoqCiAgICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgY29uY3VycmVudCB0YXNrcyB0aGF0IENsb3VkIFRhc2tzIGFsbG93cwogICAgICogdG8gYmUgZGlzcGF0Y2hlZCBmb3IgdGhpcyBxdWV1ZS4gQWZ0ZXIgdGhpcyB0aHJlc2hvbGQgaGFzIGJlZW4KICAgICAqIHJlYWNoZWQsIENsb3VkIFRhc2tzIHN0b3BzIGRpc3BhdGNoaW5nIHRhc2tzIHVudGlsIHRoZSBudW1iZXIgb2YKICAgICAqIGNvbmN1cnJlbnQgcmVxdWVzdHMgZGVjcmVhc2VzLgogICAgICogSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQogICAgICogZGVmYXVsdC4KICAgICAqIFRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUgaXMgNSwwMDAuCiAgICAgKiBUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5IGZvcgogICAgICogW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XSBhbmQgYWx3YXlzIC0xLCB3aGljaCBpbmRpY2F0ZXMgbm8gbGltaXQuIE5vIG90aGVyCiAgICAgKiBxdWV1ZSB0eXBlcyBjYW4gaGF2ZSBgbWF4X2NvbmN1cnJlbnRfdGFza3NgIHNldCB0byAtMS4KICAgICAqIFRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKICAgICAqIFttYXhfY29uY3VycmVudF9yZXF1ZXN0cyBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjbWF4X2NvbmN1cnJlbnRfcmVxdWVzdHMpLgogICAgICoKICAgICAqIEdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIGZpZWxkIDxjb2RlPmludDMyIG1heF9jb25jdXJyZW50X3Rhc2tzID0gMzs8L2NvZGU+CiAgICAgKi8KICAgIHByaXZhdGUgJG1heF9jb25jdXJyZW50X3Rhc2tzID0gMDsKCiAgICAvKioKICAgICAqIENvbnN0cnVjdG9yLgogICAgICoKICAgICAqIEBwYXJhbSBhcnJheSAkZGF0YSB7CiAgICAgKiAgICAgT3B0aW9uYWwuIERhdGEgZm9yIHBvcHVsYXRpbmcgdGhlIE1lc3NhZ2Ugb2JqZWN0LgogICAgICoKICAgICAqICAgICBAdHlwZSBmbG9hdCAkbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZAogICAgICogICAgICAgICAgIFRoZSBtYXhpbXVtIHJhdGUgYXQgd2hpY2ggdGFza3MgYXJlIGRpc3BhdGNoZWQgZnJvbSB0aGlzIHF1ZXVlLgogICAgICogICAgICAgICAgIElmIHVuc3BlY2lmaWVkIHdoZW4gdGhlIHF1ZXVlIGlzIGNyZWF0ZWQsIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUKICAgICAqICAgICAgICAgICBkZWZhdWx0LgogICAgICogICAgICAgICAgICogRm9yIFtBcHAgRW5naW5lIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQXBwRW5naW5lSHR0cFRhcmdldF0sIHRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUKICAgICAqICAgICAgICAgICAgIGlzIDUwMC4KICAgICAqICAgICAgICAgICAqIFRoaXMgZmllbGQgaXMgb3V0cHV0IG9ubHkgICBmb3IgW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XS4gSW4gYWRkaXRpb24gdG8gdGhlCiAgICAgKiAgICAgICAgICAgICBgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZGAgbGltaXQsIGEgbWF4aW11bSBvZiAxMCBRUFMgb2YKICAgICAqICAgICAgICAgICAgIFtMZWFzZVRhc2tzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5DbG91ZFRhc2tzLkxlYXNlVGFza3NdIHJlcXVlc3RzIGFyZSBhbGxvd2VkIHBlciBwdWxsIHF1ZXVlLgogICAgICogICAgICAgICAgIFRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKICAgICAqICAgICAgICAgICBbcmF0ZSBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjcmF0ZSkuCiAgICAgKiAgICAgQHR5cGUgaW50ICRtYXhfYnVyc3Rfc2l6ZQogICAgICogICAgICAgICAgIE91dHB1dCBvbmx5LiBUaGUgbWF4IGJ1cnN0IHNpemUuCiAgICAgKiAgICAgICAgICAgTWF4IGJ1cnN0IHNpemUgbGltaXRzIGhvdyBmYXN0IHRhc2tzIGluIHF1ZXVlIGFyZSBwcm9jZXNzZWQgd2hlbgogICAgICogICAgICAgICAgIG1hbnkgdGFza3MgYXJlIGluIHRoZSBxdWV1ZSBhbmQgdGhlIHJhdGUgaXMgaGlnaC4gVGhpcyBmaWVsZAogICAgICogICAgICAgICAgIGFsbG93cyB0aGUgcXVldWUgdG8gaGF2ZSBhIGhpZ2ggcmF0ZSBzbyBwcm9jZXNzaW5nIHN0YXJ0cyBzaG9ydGx5CiAgICAgKiAgICAgICAgICAgYWZ0ZXIgYSB0YXNrIGlzIGVucXVldWVkLCBidXQgc3RpbGwgbGltaXRzIHJlc291cmNlIHVzYWdlIHdoZW4KICAgICAqICAgICAgICAgICBtYW55IHRhc2tzIGFyZSBlbnF1ZXVlZCBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lLgogICAgICogICAgICAgICAgIFRoZSBbdG9rZW4gYnVja2V0XShodHRwczovL3dpa2lwZWRpYS5vcmcvd2lraS9Ub2tlbl9CdWNrZXQpCiAgICAgKiAgICAgICAgICAgYWxnb3JpdGhtIGlzIHVzZWQgdG8gY29udHJvbCB0aGUgcmF0ZSBvZiB0YXNrIGRpc3BhdGNoZXMuIEVhY2gKICAgICAqICAgICAgICAgICBxdWV1ZSBoYXMgYSB0b2tlbiBidWNrZXQgdGhhdCBob2xkcyB0b2tlbnMsIHVwIHRvIHRoZSBtYXhpbXVtCiAgICAgKiAgICAgICAgICAgc3BlY2lmaWVkIGJ5IGBtYXhfYnVyc3Rfc2l6ZWAuIEVhY2ggdGltZSBhIHRhc2sgaXMgZGlzcGF0Y2hlZCwgYQogICAgICogICAgICAgICAgIHRva2VuIGlzIHJlbW92ZWQgZnJvbSB0aGUgYnVja2V0LiBUYXNrcyB3aWxsIGJlIGRpc3BhdGNoZWQgdW50aWwKICAgICAqICAgICAgICAgICB0aGUgcXVldWUncyBidWNrZXQgcnVucyBvdXQgb2YgdG9rZW5zLiBUaGUgYnVja2V0IHdpbGwgYmUKICAgICAqICAgICAgICAgICBjb250aW51b3VzbHkgcmVmaWxsZWQgd2l0aCBuZXcgdG9rZW5zIGJhc2VkIG9uCiAgICAgKiAgICAgICAgICAgW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCiAgICAgKiAgICAgICAgICAgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZSB2YWx1ZSBvZiBgbWF4X2J1cnN0X3NpemVgIGJhc2VkIG9uIHRoZQogICAgICogICAgICAgICAgIHZhbHVlIG9mCiAgICAgKiAgICAgICAgICAgW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCiAgICAgKiAgICAgICAgICAgRm9yIEFwcCBFbmdpbmUgcXVldWVzIHRoYXQgd2VyZSBjcmVhdGVkIG9yIHVwZGF0ZWQgdXNpbmcKICAgICAqICAgICAgICAgICBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIGlzIGVxdWFsIHRvCiAgICAgKiAgICAgICAgICAgW2J1Y2tldF9zaXplXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNidWNrZXRfc2l6ZSkuCiAgICAgKiAgICAgICAgICAgU2luY2UgYG1heF9idXJzdF9zaXplYCBpcyBvdXRwdXQgb25seSwgaWYKICAgICAqICAgICAgICAgICBbVXBkYXRlUXVldWVdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuVXBkYXRlUXVldWVdIGlzIGNhbGxlZCBvbiBhIHF1ZXVlCiAgICAgKiAgICAgICAgICAgY3JlYXRlZCBieSBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIHdpbGwgYmUgcmVzZXQgYmFzZWQKICAgICAqICAgICAgICAgICBvbiB0aGUgdmFsdWUgb2YKICAgICAqICAgICAgICAgICBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXSwKICAgICAqICAgICAgICAgICByZWdhcmRsZXNzIG9mIHdoZXRoZXIKICAgICAqICAgICAgICAgICBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXQogICAgICogICAgICAgICAgIGlzIHVwZGF0ZWQuCiAgICAgKiAgICAgQHR5cGUgaW50ICRtYXhfY29uY3VycmVudF90YXNrcwogICAgICogICAgICAgICAgIFRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IHRhc2tzIHRoYXQgQ2xvdWQgVGFza3MgYWxsb3dzCiAgICAgKiAgICAgICAgICAgdG8gYmUgZGlzcGF0Y2hlZCBmb3IgdGhpcyBxdWV1ZS4gQWZ0ZXIgdGhpcyB0aHJlc2hvbGQgaGFzIGJlZW4KICAgICAqICAgICAgICAgICByZWFjaGVkLCBDbG91ZCBUYXNrcyBzdG9wcyBkaXNwYXRjaGluZyB0YXNrcyB1bnRpbCB0aGUgbnVtYmVyIG9mCiAgICAgKiAgICAgICAgICAgY29uY3VycmVudCByZXF1ZXN0cyBkZWNyZWFzZXMuCiAgICAgKiAgICAgICAgICAgSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQogICAgICogICAgICAgICAgIGRlZmF1bHQuCiAgICAgKiAgICAgICAgICAgVGhlIG1heGltdW0gYWxsb3dlZCB2YWx1ZSBpcyA1LDAwMC4KICAgICAqICAgICAgICAgICBUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5IGZvcgogICAgICogICAgICAgICAgIFtwdWxsIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUHVsbFRhcmdldF0gYW5kIGFsd2F5cyAtMSwgd2hpY2ggaW5kaWNhdGVzIG5vIGxpbWl0LiBObyBvdGhlcgogICAgICogICAgICAgICAgIHF1ZXVlIHR5cGVzIGNhbiBoYXZlIGBtYXhfY29uY3VycmVudF90YXNrc2Agc2V0IHRvIC0xLgogICAgICogICAgICAgICAgIFRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKICAgICAqICAgICAgICAgICBbbWF4X2NvbmN1cnJlbnRfcmVxdWVzdHMgaW4gcXVldWUueWFtbC94bWxdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI21heF9jb25jdXJyZW50X3JlcXVlc3RzKS4KICAgICAqIH0KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRkYXRhID0gTlVMTCkgewogICAgICAgIFxHUEJNZXRhZGF0YVxHb29nbGVcQ2xvdWRcVGFza3NcVjJCZXRhMlxRdWV1ZTo6aW5pdE9uY2UoKTsKICAgICAgICBwYXJlbnQ6Ol9fY29uc3RydWN0KCRkYXRhKTsKICAgIH0KCiAgICAvKioKICAgICAqIFRoZSBtYXhpbXVtIHJhdGUgYXQgd2hpY2ggdGFza3MgYXJlIGRpc3BhdGNoZWQgZnJvbSB0aGlzIHF1ZXVlLgogICAgICogSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQogICAgICogZGVmYXVsdC4KICAgICAqICogRm9yIFtBcHAgRW5naW5lIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQXBwRW5naW5lSHR0cFRhcmdldF0sIHRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUKICAgICAqICAgaXMgNTAwLgogICAgICogKiBUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5ICAgZm9yIFtwdWxsIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUHVsbFRhcmdldF0uIEluIGFkZGl0aW9uIHRvIHRoZQogICAgICogICBgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZGAgbGltaXQsIGEgbWF4aW11bSBvZiAxMCBRUFMgb2YKICAgICAqICAgW0xlYXNlVGFza3NdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuTGVhc2VUYXNrc10gcmVxdWVzdHMgYXJlIGFsbG93ZWQgcGVyIHB1bGwgcXVldWUuCiAgICAgKiBUaGlzIGZpZWxkIGhhcyB0aGUgc2FtZSBtZWFuaW5nIGFzCiAgICAgKiBbcmF0ZSBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjcmF0ZSkuCiAgICAgKgogICAgICogR2VuZXJhdGVkIGZyb20gcHJvdG9idWYgZmllbGQgPGNvZGU+ZG91YmxlIG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmQgPSAxOzwvY29kZT4KICAgICAqIEByZXR1cm4gZmxvYXQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldE1heFRhc2tzRGlzcGF0Y2hlZFBlclNlY29uZCgpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kOwogICAgfQoKICAgIC8qKgogICAgICogVGhlIG1heGltdW0gcmF0ZSBhdCB3aGljaCB0YXNrcyBhcmUgZGlzcGF0Y2hlZCBmcm9tIHRoaXMgcXVldWUuCiAgICAgKiBJZiB1bnNwZWNpZmllZCB3aGVuIHRoZSBxdWV1ZSBpcyBjcmVhdGVkLCBDbG91ZCBUYXNrcyB3aWxsIHBpY2sgdGhlCiAgICAgKiBkZWZhdWx0LgogICAgICogKiBGb3IgW0FwcCBFbmdpbmUgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5BcHBFbmdpbmVIdHRwVGFyZ2V0XSwgdGhlIG1heGltdW0gYWxsb3dlZCB2YWx1ZQogICAgICogICBpcyA1MDAuCiAgICAgKiAqIFRoaXMgZmllbGQgaXMgb3V0cHV0IG9ubHkgICBmb3IgW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XS4gSW4gYWRkaXRpb24gdG8gdGhlCiAgICAgKiAgIGBtYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kYCBsaW1pdCwgYSBtYXhpbXVtIG9mIDEwIFFQUyBvZgogICAgICogICBbTGVhc2VUYXNrc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5MZWFzZVRhc2tzXSByZXF1ZXN0cyBhcmUgYWxsb3dlZCBwZXIgcHVsbCBxdWV1ZS4KICAgICAqIFRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKICAgICAqIFtyYXRlIGluIHF1ZXVlLnlhbWwveG1sXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNyYXRlKS4KICAgICAqCiAgICAgKiBHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5kb3VibGUgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZCA9IDE7PC9jb2RlPgogICAgICogQHBhcmFtIGZsb2F0ICR2YXIKICAgICAqIEByZXR1cm4gJHRoaXMKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldE1heFRhc2tzRGlzcGF0Y2hlZFBlclNlY29uZCgkdmFyKQogICAgewogICAgICAgIEdQQlV0aWw6OmNoZWNrRG91YmxlKCR2YXIpOwogICAgICAgICR0aGlzLT5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kID0gJHZhcjsKCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogT3V0cHV0IG9ubHkuIFRoZSBtYXggYnVyc3Qgc2l6ZS4KICAgICAqIE1heCBidXJzdCBzaXplIGxpbWl0cyBob3cgZmFzdCB0YXNrcyBpbiBxdWV1ZSBhcmUgcHJvY2Vzc2VkIHdoZW4KICAgICAqIG1hbnkgdGFza3MgYXJlIGluIHRoZSBxdWV1ZSBhbmQgdGhlIHJhdGUgaXMgaGlnaC4gVGhpcyBmaWVsZAogICAgICogYWxsb3dzIHRoZSBxdWV1ZSB0byBoYXZlIGEgaGlnaCByYXRlIHNvIHByb2Nlc3Npbmcgc3RhcnRzIHNob3J0bHkKICAgICAqIGFmdGVyIGEgdGFzayBpcyBlbnF1ZXVlZCwgYnV0IHN0aWxsIGxpbWl0cyByZXNvdXJjZSB1c2FnZSB3aGVuCiAgICAgKiBtYW55IHRhc2tzIGFyZSBlbnF1ZXVlZCBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lLgogICAgICogVGhlIFt0b2tlbiBidWNrZXRdKGh0dHBzOi8vd2lraXBlZGlhLm9yZy93aWtpL1Rva2VuX0J1Y2tldCkKICAgICAqIGFsZ29yaXRobSBpcyB1c2VkIHRvIGNvbnRyb2wgdGhlIHJhdGUgb2YgdGFzayBkaXNwYXRjaGVzLiBFYWNoCiAgICAgKiBxdWV1ZSBoYXMgYSB0b2tlbiBidWNrZXQgdGhhdCBob2xkcyB0b2tlbnMsIHVwIHRvIHRoZSBtYXhpbXVtCiAgICAgKiBzcGVjaWZpZWQgYnkgYG1heF9idXJzdF9zaXplYC4gRWFjaCB0aW1lIGEgdGFzayBpcyBkaXNwYXRjaGVkLCBhCiAgICAgKiB0b2tlbiBpcyByZW1vdmVkIGZyb20gdGhlIGJ1Y2tldC4gVGFza3Mgd2lsbCBiZSBkaXNwYXRjaGVkIHVudGlsCiAgICAgKiB0aGUgcXVldWUncyBidWNrZXQgcnVucyBvdXQgb2YgdG9rZW5zLiBUaGUgYnVja2V0IHdpbGwgYmUKICAgICAqIGNvbnRpbnVvdXNseSByZWZpbGxlZCB3aXRoIG5ldyB0b2tlbnMgYmFzZWQgb24KICAgICAqIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgogICAgICogQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZSB2YWx1ZSBvZiBgbWF4X2J1cnN0X3NpemVgIGJhc2VkIG9uIHRoZQogICAgICogdmFsdWUgb2YKICAgICAqIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgogICAgICogRm9yIEFwcCBFbmdpbmUgcXVldWVzIHRoYXQgd2VyZSBjcmVhdGVkIG9yIHVwZGF0ZWQgdXNpbmcKICAgICAqIGBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgZXF1YWwgdG8KICAgICAqIFtidWNrZXRfc2l6ZV0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjYnVja2V0X3NpemUpLgogICAgICogU2luY2UgYG1heF9idXJzdF9zaXplYCBpcyBvdXRwdXQgb25seSwgaWYKICAgICAqIFtVcGRhdGVRdWV1ZV1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5VcGRhdGVRdWV1ZV0gaXMgY2FsbGVkIG9uIGEgcXVldWUKICAgICAqIGNyZWF0ZWQgYnkgYHF1ZXVlLnlhbWwveG1sYCwgYG1heF9idXJzdF9zaXplYCB3aWxsIGJlIHJlc2V0IGJhc2VkCiAgICAgKiBvbiB0aGUgdmFsdWUgb2YKICAgICAqIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLAogICAgICogcmVnYXJkbGVzcyBvZiB3aGV0aGVyCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXQogICAgICogaXMgdXBkYXRlZC4KICAgICAqCiAgICAgKiBHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5pbnQzMiBtYXhfYnVyc3Rfc2l6ZSA9IDI7PC9jb2RlPgogICAgICogQHJldHVybiBpbnQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldE1heEJ1cnN0U2l6ZSgpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5tYXhfYnVyc3Rfc2l6ZTsKICAgIH0KCiAgICAvKioKICAgICAqIE91dHB1dCBvbmx5LiBUaGUgbWF4IGJ1cnN0IHNpemUuCiAgICAgKiBNYXggYnVyc3Qgc2l6ZSBsaW1pdHMgaG93IGZhc3QgdGFza3MgaW4gcXVldWUgYXJlIHByb2Nlc3NlZCB3aGVuCiAgICAgKiBtYW55IHRhc2tzIGFyZSBpbiB0aGUgcXVldWUgYW5kIHRoZSByYXRlIGlzIGhpZ2guIFRoaXMgZmllbGQKICAgICAqIGFsbG93cyB0aGUgcXVldWUgdG8gaGF2ZSBhIGhpZ2ggcmF0ZSBzbyBwcm9jZXNzaW5nIHN0YXJ0cyBzaG9ydGx5CiAgICAgKiBhZnRlciBhIHRhc2sgaXMgZW5xdWV1ZWQsIGJ1dCBzdGlsbCBsaW1pdHMgcmVzb3VyY2UgdXNhZ2Ugd2hlbgogICAgICogbWFueSB0YXNrcyBhcmUgZW5xdWV1ZWQgaW4gYSBzaG9ydCBwZXJpb2Qgb2YgdGltZS4KICAgICAqIFRoZSBbdG9rZW4gYnVja2V0XShodHRwczovL3dpa2lwZWRpYS5vcmcvd2lraS9Ub2tlbl9CdWNrZXQpCiAgICAgKiBhbGdvcml0aG0gaXMgdXNlZCB0byBjb250cm9sIHRoZSByYXRlIG9mIHRhc2sgZGlzcGF0Y2hlcy4gRWFjaAogICAgICogcXVldWUgaGFzIGEgdG9rZW4gYnVja2V0IHRoYXQgaG9sZHMgdG9rZW5zLCB1cCB0byB0aGUgbWF4aW11bQogICAgICogc3BlY2lmaWVkIGJ5IGBtYXhfYnVyc3Rfc2l6ZWAuIEVhY2ggdGltZSBhIHRhc2sgaXMgZGlzcGF0Y2hlZCwgYQogICAgICogdG9rZW4gaXMgcmVtb3ZlZCBmcm9tIHRoZSBidWNrZXQuIFRhc2tzIHdpbGwgYmUgZGlzcGF0Y2hlZCB1bnRpbAogICAgICogdGhlIHF1ZXVlJ3MgYnVja2V0IHJ1bnMgb3V0IG9mIHRva2Vucy4gVGhlIGJ1Y2tldCB3aWxsIGJlCiAgICAgKiBjb250aW51b3VzbHkgcmVmaWxsZWQgd2l0aCBuZXcgdG9rZW5zIGJhc2VkIG9uCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXS4KICAgICAqIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUgdmFsdWUgb2YgYG1heF9idXJzdF9zaXplYCBiYXNlZCBvbiB0aGUKICAgICAqIHZhbHVlIG9mCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXS4KICAgICAqIEZvciBBcHAgRW5naW5lIHF1ZXVlcyB0aGF0IHdlcmUgY3JlYXRlZCBvciB1cGRhdGVkIHVzaW5nCiAgICAgKiBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIGlzIGVxdWFsIHRvCiAgICAgKiBbYnVja2V0X3NpemVdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI2J1Y2tldF9zaXplKS4KICAgICAqIFNpbmNlIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgb3V0cHV0IG9ubHksIGlmCiAgICAgKiBbVXBkYXRlUXVldWVdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuVXBkYXRlUXVldWVdIGlzIGNhbGxlZCBvbiBhIHF1ZXVlCiAgICAgKiBjcmVhdGVkIGJ5IGBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgd2lsbCBiZSByZXNldCBiYXNlZAogICAgICogb24gdGhlIHZhbHVlIG9mCiAgICAgKiBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXSwKICAgICAqIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlcgogICAgICogW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0KICAgICAqIGlzIHVwZGF0ZWQuCiAgICAgKgogICAgICogR2VuZXJhdGVkIGZyb20gcHJvdG9idWYgZmllbGQgPGNvZGU+aW50MzIgbWF4X2J1cnN0X3NpemUgPSAyOzwvY29kZT4KICAgICAqIEBwYXJhbSBpbnQgJHZhcgogICAgICogQHJldHVybiAkdGhpcwogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0TWF4QnVyc3RTaXplKCR2YXIpCiAgICB7CiAgICAgICAgR1BCVXRpbDo6Y2hlY2tJbnQzMigkdmFyKTsKICAgICAgICAkdGhpcy0+bWF4X2J1cnN0X3NpemUgPSAkdmFyOwoKICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgY29uY3VycmVudCB0YXNrcyB0aGF0IENsb3VkIFRhc2tzIGFsbG93cwogICAgICogdG8gYmUgZGlzcGF0Y2hlZCBmb3IgdGhpcyBxdWV1ZS4gQWZ0ZXIgdGhpcyB0aHJlc2hvbGQgaGFzIGJlZW4KICAgICAqIHJlYWNoZWQsIENsb3VkIFRhc2tzIHN0b3BzIGRpc3BhdGNoaW5nIHRhc2tzIHVudGlsIHRoZSBudW1iZXIgb2YKICAgICAqIGNvbmN1cnJlbnQgcmVxdWVzdHMgZGVjcmVhc2VzLgogICAgICogSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQogICAgICogZGVmYXVsdC4KICAgICAqIFRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUgaXMgNSwwMDAuCiAgICAgKiBUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5IGZvcgogICAgICogW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XSBhbmQgYWx3YXlzIC0xLCB3aGljaCBpbmRpY2F0ZXMgbm8gbGltaXQuIE5vIG90aGVyCiAgICAgKiBxdWV1ZSB0eXBlcyBjYW4gaGF2ZSBgbWF4X2NvbmN1cnJlbnRfdGFza3NgIHNldCB0byAtMS4KICAgICAqIFRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKICAgICAqIFttYXhfY29uY3VycmVudF9yZXF1ZXN0cyBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjbWF4X2NvbmN1cnJlbnRfcmVxdWVzdHMpLgogICAgICoKICAgICAqIEdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIGZpZWxkIDxjb2RlPmludDMyIG1heF9jb25jdXJyZW50X3Rhc2tzID0gMzs8L2NvZGU+CiAgICAgKiBAcmV0dXJuIGludAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0TWF4Q29uY3VycmVudFRhc2tzKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPm1heF9jb25jdXJyZW50X3Rhc2tzOwogICAgfQoKICAgIC8qKgogICAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbmN1cnJlbnQgdGFza3MgdGhhdCBDbG91ZCBUYXNrcyBhbGxvd3MKICAgICAqIHRvIGJlIGRpc3BhdGNoZWQgZm9yIHRoaXMgcXVldWUuIEFmdGVyIHRoaXMgdGhyZXNob2xkIGhhcyBiZWVuCiAgICAgKiByZWFjaGVkLCBDbG91ZCBUYXNrcyBzdG9wcyBkaXNwYXRjaGluZyB0YXNrcyB1bnRpbCB0aGUgbnVtYmVyIG9mCiAgICAgKiBjb25jdXJyZW50IHJlcXVlc3RzIGRlY3JlYXNlcy4KICAgICAqIElmIHVuc3BlY2lmaWVkIHdoZW4gdGhlIHF1ZXVlIGlzIGNyZWF0ZWQsIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUKICAgICAqIGRlZmF1bHQuCiAgICAgKiBUaGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlIGlzIDUsMDAwLgogICAgICogVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSBmb3IKICAgICAqIFtwdWxsIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUHVsbFRhcmdldF0gYW5kIGFsd2F5cyAtMSwgd2hpY2ggaW5kaWNhdGVzIG5vIGxpbWl0LiBObyBvdGhlcgogICAgICogcXVldWUgdHlwZXMgY2FuIGhhdmUgYG1heF9jb25jdXJyZW50X3Rhc2tzYCBzZXQgdG8gLTEuCiAgICAgKiBUaGlzIGZpZWxkIGhhcyB0aGUgc2FtZSBtZWFuaW5nIGFzCiAgICAgKiBbbWF4X2NvbmN1cnJlbnRfcmVxdWVzdHMgaW4gcXVldWUueWFtbC94bWxdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI21heF9jb25jdXJyZW50X3JlcXVlc3RzKS4KICAgICAqCiAgICAgKiBHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5pbnQzMiBtYXhfY29uY3VycmVudF90YXNrcyA9IDM7PC9jb2RlPgogICAgICogQHBhcmFtIGludCAkdmFyCiAgICAgKiBAcmV0dXJuICR0aGlzCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXRNYXhDb25jdXJyZW50VGFza3MoJHZhcikKICAgIHsKICAgICAgICBHUEJVdGlsOjpjaGVja0ludDMyKCR2YXIpOwogICAgICAgICR0aGlzLT5tYXhfY29uY3VycmVudF90YXNrcyA9ICR2YXI7CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCn0KCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6Mjc6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI3OiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJWMmJldGEyIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6Mzg6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTE6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM4OiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTJcUmF0ZUxpbWl0cyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJSYXRlTGltaXRzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxMjoiUmF0ZSBsaW1pdHMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQyNjoiVGhpcyBtZXNzYWdlIGRldGVybWluZXMgdGhlIG1heGltdW0gcmF0ZSB0aGF0IHRhc2tzIGNhbiBiZSBkaXNwYXRjaGVkIGJ5IGEKcXVldWUsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgZGlzcGF0Y2ggaXMgYSBmaXJzdCB0YXNrIGF0dGVtcHQgb3IgYSByZXRyeS4KTm90ZTogVGhlIGRlYnVnZ2luZyBjb21tYW5kLCBbUnVuVGFza11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5SdW5UYXNrXSwgd2lsbCBydW4gYSB0YXNrCmV2ZW4gaWYgdGhlIHF1ZXVlIGhhcyByZWFjaGVkIGl0cyBbUmF0ZUxpbWl0c11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0c10uCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBtZXNzYWdlIDxjb2RlPmdvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHM8L2NvZGU+IjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MjY6Ikdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTozOntzOjc6IkdQQlR5cGUiO3M6MzI6Ikdvb2dsZVxQcm90b2J1ZlxJbnRlcm5hbFxHUEJUeXBlIjtzOjEzOiJSZXBlYXRlZEZpZWxkIjtzOjM4OiJHb29nbGVcUHJvdG9idWZcSW50ZXJuYWxcUmVwZWF0ZWRGaWVsZCI7czo3OiJHUEJVdGlsIjtzOjMyOiJHb29nbGVcUHJvdG9idWZcSW50ZXJuYWxcR1BCVXRpbCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozMzoiXEdvb2dsZVxQcm90b2J1ZlxJbnRlcm5hbFxNZXNzYWdlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoiTWVzc2FnZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YTozOntzOjcyOiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTJcUmF0ZUxpbWl0czo6JG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmQiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzI6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjokbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjMxOiJtYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjYzOiJUaGUgbWF4aW11bSByYXRlIGF0IHdoaWNoIHRhc2tzIGFyZSBkaXNwYXRjaGVkIGZyb20gdGhpcyBxdWV1ZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Njg5OiJJZiB1bnNwZWNpZmllZCB3aGVuIHRoZSBxdWV1ZSBpcyBjcmVhdGVkLCBDbG91ZCBUYXNrcyB3aWxsIHBpY2sgdGhlCmRlZmF1bHQuCiogRm9yIFtBcHAgRW5naW5lIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQXBwRW5naW5lSHR0cFRhcmdldF0sIHRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUKICBpcyA1MDAuCiogVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSAgIGZvciBbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdLiBJbiBhZGRpdGlvbiB0byB0aGUKICBgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZGAgbGltaXQsIGEgbWF4aW11bSBvZiAxMCBRUFMgb2YKICBbTGVhc2VUYXNrc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5MZWFzZVRhc2tzXSByZXF1ZXN0cyBhcmUgYWxsb3dlZCBwZXIgcHVsbCBxdWV1ZS4KVGhpcyBmaWVsZCBoYXMgdGhlIHNhbWUgbWVhbmluZyBhcwpbcmF0ZSBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjcmF0ZSkuCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5kb3VibGUgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZCA9IDE7PC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MjU7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czozOiIwLjAiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9czo1NToiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OiRtYXhfYnVyc3Rfc2l6ZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6ODp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NToiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OiRtYXhfYnVyc3Rfc2l6ZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE0OiJtYXhfYnVyc3Rfc2l6ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMjoiT3V0cHV0IG9ubHkuIFRoZSBtYXggYnVyc3Qgc2l6ZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTc0MDoiTWF4IGJ1cnN0IHNpemUgbGltaXRzIGhvdyBmYXN0IHRhc2tzIGluIHF1ZXVlIGFyZSBwcm9jZXNzZWQgd2hlbgptYW55IHRhc2tzIGFyZSBpbiB0aGUgcXVldWUgYW5kIHRoZSByYXRlIGlzIGhpZ2guIFRoaXMgZmllbGQKYWxsb3dzIHRoZSBxdWV1ZSB0byBoYXZlIGEgaGlnaCByYXRlIHNvIHByb2Nlc3Npbmcgc3RhcnRzIHNob3J0bHkKYWZ0ZXIgYSB0YXNrIGlzIGVucXVldWVkLCBidXQgc3RpbGwgbGltaXRzIHJlc291cmNlIHVzYWdlIHdoZW4KbWFueSB0YXNrcyBhcmUgZW5xdWV1ZWQgaW4gYSBzaG9ydCBwZXJpb2Qgb2YgdGltZS4KVGhlIFt0b2tlbiBidWNrZXRdKGh0dHBzOi8vd2lraXBlZGlhLm9yZy93aWtpL1Rva2VuX0J1Y2tldCkKYWxnb3JpdGhtIGlzIHVzZWQgdG8gY29udHJvbCB0aGUgcmF0ZSBvZiB0YXNrIGRpc3BhdGNoZXMuIEVhY2gKcXVldWUgaGFzIGEgdG9rZW4gYnVja2V0IHRoYXQgaG9sZHMgdG9rZW5zLCB1cCB0byB0aGUgbWF4aW11bQpzcGVjaWZpZWQgYnkgYG1heF9idXJzdF9zaXplYC4gRWFjaCB0aW1lIGEgdGFzayBpcyBkaXNwYXRjaGVkLCBhCnRva2VuIGlzIHJlbW92ZWQgZnJvbSB0aGUgYnVja2V0LiBUYXNrcyB3aWxsIGJlIGRpc3BhdGNoZWQgdW50aWwKdGhlIHF1ZXVlJ3MgYnVja2V0IHJ1bnMgb3V0IG9mIHRva2Vucy4gVGhlIGJ1Y2tldCB3aWxsIGJlCmNvbnRpbnVvdXNseSByZWZpbGxlZCB3aXRoIG5ldyB0b2tlbnMgYmFzZWQgb24KW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCkNsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUgdmFsdWUgb2YgYG1heF9idXJzdF9zaXplYCBiYXNlZCBvbiB0aGUKdmFsdWUgb2YKW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCkZvciBBcHAgRW5naW5lIHF1ZXVlcyB0aGF0IHdlcmUgY3JlYXRlZCBvciB1cGRhdGVkIHVzaW5nCmBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgZXF1YWwgdG8KW2J1Y2tldF9zaXplXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNidWNrZXRfc2l6ZSkuClNpbmNlIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgb3V0cHV0IG9ubHksIGlmCltVcGRhdGVRdWV1ZV1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5VcGRhdGVRdWV1ZV0gaXMgY2FsbGVkIG9uIGEgcXVldWUKY3JlYXRlZCBieSBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIHdpbGwgYmUgcmVzZXQgYmFzZWQKb24gdGhlIHZhbHVlIG9mClttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLApyZWdhcmRsZXNzIG9mIHdoZXRoZXIKW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0KaXMgdXBkYXRlZC4KCkdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIGZpZWxkIDxjb2RlPmludDMyIG1heF9idXJzdF9zaXplID0gMjs8L2NvZGU+IjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoyNTtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtzOjE6IjAiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Njk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9czo2MToiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OiRtYXhfY29uY3VycmVudF90YXNrcyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6ODp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2MToiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OiRtYXhfY29uY3VycmVudF90YXNrcyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIwOiJtYXhfY29uY3VycmVudF90YXNrcyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMjE6IlRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IHRhc2tzIHRoYXQgQ2xvdWQgVGFza3MgYWxsb3dzCnRvIGJlIGRpc3BhdGNoZWQgZm9yIHRoaXMgcXVldWUuIEFmdGVyIHRoaXMgdGhyZXNob2xkIGhhcyBiZWVuCnJlYWNoZWQsIENsb3VkIFRhc2tzIHN0b3BzIGRpc3BhdGNoaW5nIHRhc2tzIHVudGlsIHRoZSBudW1iZXIgb2YKY29uY3VycmVudCByZXF1ZXN0cyBkZWNyZWFzZXMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjU1MzoiSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQpkZWZhdWx0LgpUaGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlIGlzIDUsMDAwLgpUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5IGZvcgpbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdIGFuZCBhbHdheXMgLTEsIHdoaWNoIGluZGljYXRlcyBubyBsaW1pdC4gTm8gb3RoZXIKcXVldWUgdHlwZXMgY2FuIGhhdmUgYG1heF9jb25jdXJyZW50X3Rhc2tzYCBzZXQgdG8gLTEuClRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKW21heF9jb25jdXJyZW50X3JlcXVlc3RzIGluIHF1ZXVlLnlhbWwveG1sXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNtYXhfY29uY3VycmVudF9yZXF1ZXN0cykuCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5pbnQzMiBtYXhfY29uY3VycmVudF90YXNrcyA9IDM7PC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MjU7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czoxOiIwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjg2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YTo3OntzOjUzOiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTJcUmF0ZUxpbWl0czo6X19jb25zdHJ1Y3QoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTI6IkNvbnN0cnVjdG9yLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NDoiZGF0YSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Mzc0MzoiewogICAgT3B0aW9uYWwuIERhdGEgZm9yIHBvcHVsYXRpbmcgdGhlIE1lc3NhZ2Ugb2JqZWN0LgoKICAgIEB0eXBlIGZsb2F0ICRtYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kCiAgICAgICAgICBUaGUgbWF4aW11bSByYXRlIGF0IHdoaWNoIHRhc2tzIGFyZSBkaXNwYXRjaGVkIGZyb20gdGhpcyBxdWV1ZS4KICAgICAgICAgIElmIHVuc3BlY2lmaWVkIHdoZW4gdGhlIHF1ZXVlIGlzIGNyZWF0ZWQsIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUKICAgICAgICAgIGRlZmF1bHQuCiAgICAgICAgICAqIEZvciBbQXBwIEVuZ2luZSBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkFwcEVuZ2luZUh0dHBUYXJnZXRdLCB0aGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlCiAgICAgICAgICAgIGlzIDUwMC4KICAgICAgICAgICogVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSAgIGZvciBbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdLiBJbiBhZGRpdGlvbiB0byB0aGUKICAgICAgICAgICAgYG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRgIGxpbWl0LCBhIG1heGltdW0gb2YgMTAgUVBTIG9mCiAgICAgICAgICAgIFtMZWFzZVRhc2tzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5DbG91ZFRhc2tzLkxlYXNlVGFza3NdIHJlcXVlc3RzIGFyZSBhbGxvd2VkIHBlciBwdWxsIHF1ZXVlLgogICAgICAgICAgVGhpcyBmaWVsZCBoYXMgdGhlIHNhbWUgbWVhbmluZyBhcwogICAgICAgICAgW3JhdGUgaW4gcXVldWUueWFtbC94bWxdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI3JhdGUpLgogICAgQHR5cGUgaW50ICRtYXhfYnVyc3Rfc2l6ZQogICAgICAgICAgT3V0cHV0IG9ubHkuIFRoZSBtYXggYnVyc3Qgc2l6ZS4KICAgICAgICAgIE1heCBidXJzdCBzaXplIGxpbWl0cyBob3cgZmFzdCB0YXNrcyBpbiBxdWV1ZSBhcmUgcHJvY2Vzc2VkIHdoZW4KICAgICAgICAgIG1hbnkgdGFza3MgYXJlIGluIHRoZSBxdWV1ZSBhbmQgdGhlIHJhdGUgaXMgaGlnaC4gVGhpcyBmaWVsZAogICAgICAgICAgYWxsb3dzIHRoZSBxdWV1ZSB0byBoYXZlIGEgaGlnaCByYXRlIHNvIHByb2Nlc3Npbmcgc3RhcnRzIHNob3J0bHkKICAgICAgICAgIGFmdGVyIGEgdGFzayBpcyBlbnF1ZXVlZCwgYnV0IHN0aWxsIGxpbWl0cyByZXNvdXJjZSB1c2FnZSB3aGVuCiAgICAgICAgICBtYW55IHRhc2tzIGFyZSBlbnF1ZXVlZCBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lLgogICAgICAgICAgVGhlIFt0b2tlbiBidWNrZXRdKGh0dHBzOi8vd2lraXBlZGlhLm9yZy93aWtpL1Rva2VuX0J1Y2tldCkKICAgICAgICAgIGFsZ29yaXRobSBpcyB1c2VkIHRvIGNvbnRyb2wgdGhlIHJhdGUgb2YgdGFzayBkaXNwYXRjaGVzLiBFYWNoCiAgICAgICAgICBxdWV1ZSBoYXMgYSB0b2tlbiBidWNrZXQgdGhhdCBob2xkcyB0b2tlbnMsIHVwIHRvIHRoZSBtYXhpbXVtCiAgICAgICAgICBzcGVjaWZpZWQgYnkgYG1heF9idXJzdF9zaXplYC4gRWFjaCB0aW1lIGEgdGFzayBpcyBkaXNwYXRjaGVkLCBhCiAgICAgICAgICB0b2tlbiBpcyByZW1vdmVkIGZyb20gdGhlIGJ1Y2tldC4gVGFza3Mgd2lsbCBiZSBkaXNwYXRjaGVkIHVudGlsCiAgICAgICAgICB0aGUgcXVldWUncyBidWNrZXQgcnVucyBvdXQgb2YgdG9rZW5zLiBUaGUgYnVja2V0IHdpbGwgYmUKICAgICAgICAgIGNvbnRpbnVvdXNseSByZWZpbGxlZCB3aXRoIG5ldyB0b2tlbnMgYmFzZWQgb24KICAgICAgICAgIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgogICAgICAgICAgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZSB2YWx1ZSBvZiBgbWF4X2J1cnN0X3NpemVgIGJhc2VkIG9uIHRoZQogICAgICAgICAgdmFsdWUgb2YKICAgICAgICAgIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgogICAgICAgICAgRm9yIEFwcCBFbmdpbmUgcXVldWVzIHRoYXQgd2VyZSBjcmVhdGVkIG9yIHVwZGF0ZWQgdXNpbmcKICAgICAgICAgIGBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgZXF1YWwgdG8KICAgICAgICAgIFtidWNrZXRfc2l6ZV0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjYnVja2V0X3NpemUpLgogICAgICAgICAgU2luY2UgYG1heF9idXJzdF9zaXplYCBpcyBvdXRwdXQgb25seSwgaWYKICAgICAgICAgIFtVcGRhdGVRdWV1ZV1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5VcGRhdGVRdWV1ZV0gaXMgY2FsbGVkIG9uIGEgcXVldWUKICAgICAgICAgIGNyZWF0ZWQgYnkgYHF1ZXVlLnlhbWwveG1sYCwgYG1heF9idXJzdF9zaXplYCB3aWxsIGJlIHJlc2V0IGJhc2VkCiAgICAgICAgICBvbiB0aGUgdmFsdWUgb2YKICAgICAgICAgIFttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLAogICAgICAgICAgcmVnYXJkbGVzcyBvZiB3aGV0aGVyCiAgICAgICAgICBbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXQogICAgICAgICAgaXMgdXBkYXRlZC4KICAgIEB0eXBlIGludCAkbWF4X2NvbmN1cnJlbnRfdGFza3MKICAgICAgICAgIFRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IHRhc2tzIHRoYXQgQ2xvdWQgVGFza3MgYWxsb3dzCiAgICAgICAgICB0byBiZSBkaXNwYXRjaGVkIGZvciB0aGlzIHF1ZXVlLiBBZnRlciB0aGlzIHRocmVzaG9sZCBoYXMgYmVlbgogICAgICAgICAgcmVhY2hlZCwgQ2xvdWQgVGFza3Mgc3RvcHMgZGlzcGF0Y2hpbmcgdGFza3MgdW50aWwgdGhlIG51bWJlciBvZgogICAgICAgICAgY29uY3VycmVudCByZXF1ZXN0cyBkZWNyZWFzZXMuCiAgICAgICAgICBJZiB1bnNwZWNpZmllZCB3aGVuIHRoZSBxdWV1ZSBpcyBjcmVhdGVkLCBDbG91ZCBUYXNrcyB3aWxsIHBpY2sgdGhlCiAgICAgICAgICBkZWZhdWx0LgogICAgICAgICAgVGhlIG1heGltdW0gYWxsb3dlZCB2YWx1ZSBpcyA1LDAwMC4KICAgICAgICAgIFRoaXMgZmllbGQgaXMgb3V0cHV0IG9ubHkgZm9yCiAgICAgICAgICBbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdIGFuZCBhbHdheXMgLTEsIHdoaWNoIGluZGljYXRlcyBubyBsaW1pdC4gTm8gb3RoZXIKICAgICAgICAgIHF1ZXVlIHR5cGVzIGNhbiBoYXZlIGBtYXhfY29uY3VycmVudF90YXNrc2Agc2V0IHRvIC0xLgogICAgICAgICAgVGhpcyBmaWVsZCBoYXMgdGhlIHNhbWUgbWVhbmluZyBhcwogICAgICAgICAgW21heF9jb25jdXJyZW50X3JlcXVlc3RzIGluIHF1ZXVlLnlhbWwveG1sXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNtYXhfY29uY3VycmVudF9yZXF1ZXN0cykuCn0iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjI1O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTM6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpfX2NvbnN0cnVjdCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6Il9fY29uc3RydWN0Ijt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6ImRhdGEiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjQ6Ik5VTEwiO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNDk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo3MjoiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OmdldE1heFRhc2tzRGlzcGF0Y2hlZFBlclNlY29uZCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo2MzoiVGhlIG1heGltdW0gcmF0ZSBhdCB3aGljaCB0YXNrcyBhcmUgZGlzcGF0Y2hlZCBmcm9tIHRoaXMgcXVldWUuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjY4OToiSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQpkZWZhdWx0LgoqIEZvciBbQXBwIEVuZ2luZSBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkFwcEVuZ2luZUh0dHBUYXJnZXRdLCB0aGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlCiAgaXMgNTAwLgoqIFRoaXMgZmllbGQgaXMgb3V0cHV0IG9ubHkgICBmb3IgW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XS4gSW4gYWRkaXRpb24gdG8gdGhlCiAgYG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRgIGxpbWl0LCBhIG1heGltdW0gb2YgMTAgUVBTIG9mCiAgW0xlYXNlVGFza3NdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuTGVhc2VUYXNrc10gcmVxdWVzdHMgYXJlIGFsbG93ZWQgcGVyIHB1bGwgcXVldWUuClRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKW3JhdGUgaW4gcXVldWUueWFtbC94bWxdKGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9hcHBlbmdpbmUvZG9jcy9zdGFuZGFyZC9weXRob24vY29uZmlnL3F1ZXVlcmVmI3JhdGUpLgoKR2VuZXJhdGVkIGZyb20gcHJvdG9idWYgZmllbGQgPGNvZGU+ZG91YmxlIG1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmQgPSAxOzwvY29kZT4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcRmxvYXRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoyNTtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjcyOiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTJcUmF0ZUxpbWl0czo6Z2V0TWF4VGFza3NEaXNwYXRjaGVkUGVyU2Vjb25kKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozMDoiZ2V0TWF4VGFza3NEaXNwYXRjaGVkUGVyU2Vjb25kIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE2OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjcyOiJcR29vZ2xlXENsb3VkXFRhc2tzXFYyYmV0YTJcUmF0ZUxpbWl0czo6c2V0TWF4VGFza3NEaXNwYXRjaGVkUGVyU2Vjb25kKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjYzOiJUaGUgbWF4aW11bSByYXRlIGF0IHdoaWNoIHRhc2tzIGFyZSBkaXNwYXRjaGVkIGZyb20gdGhpcyBxdWV1ZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Njg5OiJJZiB1bnNwZWNpZmllZCB3aGVuIHRoZSBxdWV1ZSBpcyBjcmVhdGVkLCBDbG91ZCBUYXNrcyB3aWxsIHBpY2sgdGhlCmRlZmF1bHQuCiogRm9yIFtBcHAgRW5naW5lIHF1ZXVlc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQXBwRW5naW5lSHR0cFRhcmdldF0sIHRoZSBtYXhpbXVtIGFsbG93ZWQgdmFsdWUKICBpcyA1MDAuCiogVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSAgIGZvciBbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdLiBJbiBhZGRpdGlvbiB0byB0aGUKICBgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZGAgbGltaXQsIGEgbWF4aW11bSBvZiAxMCBRUFMgb2YKICBbTGVhc2VUYXNrc11bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5MZWFzZVRhc2tzXSByZXF1ZXN0cyBhcmUgYWxsb3dlZCBwZXIgcHVsbCBxdWV1ZS4KVGhpcyBmaWVsZCBoYXMgdGhlIHNhbWUgbWVhbmluZyBhcwpbcmF0ZSBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjcmF0ZSkuCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5kb3VibGUgbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZCA9IDE7PC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czozOiJ2YXIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcRmxvYXRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVGhpcyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MjU7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3MjoiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OnNldE1heFRhc2tzRGlzcGF0Y2hlZFBlclNlY29uZCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MzA6InNldE1heFRhc2tzRGlzcGF0Y2hlZFBlclNlY29uZCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czozOiJ2YXIiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxOTA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1NzoiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OmdldE1heEJ1cnN0U2l6ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMjoiT3V0cHV0IG9ubHkuIFRoZSBtYXggYnVyc3Qgc2l6ZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTc0MDoiTWF4IGJ1cnN0IHNpemUgbGltaXRzIGhvdyBmYXN0IHRhc2tzIGluIHF1ZXVlIGFyZSBwcm9jZXNzZWQgd2hlbgptYW55IHRhc2tzIGFyZSBpbiB0aGUgcXVldWUgYW5kIHRoZSByYXRlIGlzIGhpZ2guIFRoaXMgZmllbGQKYWxsb3dzIHRoZSBxdWV1ZSB0byBoYXZlIGEgaGlnaCByYXRlIHNvIHByb2Nlc3Npbmcgc3RhcnRzIHNob3J0bHkKYWZ0ZXIgYSB0YXNrIGlzIGVucXVldWVkLCBidXQgc3RpbGwgbGltaXRzIHJlc291cmNlIHVzYWdlIHdoZW4KbWFueSB0YXNrcyBhcmUgZW5xdWV1ZWQgaW4gYSBzaG9ydCBwZXJpb2Qgb2YgdGltZS4KVGhlIFt0b2tlbiBidWNrZXRdKGh0dHBzOi8vd2lraXBlZGlhLm9yZy93aWtpL1Rva2VuX0J1Y2tldCkKYWxnb3JpdGhtIGlzIHVzZWQgdG8gY29udHJvbCB0aGUgcmF0ZSBvZiB0YXNrIGRpc3BhdGNoZXMuIEVhY2gKcXVldWUgaGFzIGEgdG9rZW4gYnVja2V0IHRoYXQgaG9sZHMgdG9rZW5zLCB1cCB0byB0aGUgbWF4aW11bQpzcGVjaWZpZWQgYnkgYG1heF9idXJzdF9zaXplYC4gRWFjaCB0aW1lIGEgdGFzayBpcyBkaXNwYXRjaGVkLCBhCnRva2VuIGlzIHJlbW92ZWQgZnJvbSB0aGUgYnVja2V0LiBUYXNrcyB3aWxsIGJlIGRpc3BhdGNoZWQgdW50aWwKdGhlIHF1ZXVlJ3MgYnVja2V0IHJ1bnMgb3V0IG9mIHRva2Vucy4gVGhlIGJ1Y2tldCB3aWxsIGJlCmNvbnRpbnVvdXNseSByZWZpbGxlZCB3aXRoIG5ldyB0b2tlbnMgYmFzZWQgb24KW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCkNsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUgdmFsdWUgb2YgYG1heF9idXJzdF9zaXplYCBiYXNlZCBvbiB0aGUKdmFsdWUgb2YKW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0uCkZvciBBcHAgRW5naW5lIHF1ZXVlcyB0aGF0IHdlcmUgY3JlYXRlZCBvciB1cGRhdGVkIHVzaW5nCmBxdWV1ZS55YW1sL3htbGAsIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgZXF1YWwgdG8KW2J1Y2tldF9zaXplXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNidWNrZXRfc2l6ZSkuClNpbmNlIGBtYXhfYnVyc3Rfc2l6ZWAgaXMgb3V0cHV0IG9ubHksIGlmCltVcGRhdGVRdWV1ZV1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQ2xvdWRUYXNrcy5VcGRhdGVRdWV1ZV0gaXMgY2FsbGVkIG9uIGEgcXVldWUKY3JlYXRlZCBieSBgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIHdpbGwgYmUgcmVzZXQgYmFzZWQKb24gdGhlIHZhbHVlIG9mClttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLApyZWdhcmRsZXNzIG9mIHdoZXRoZXIKW21heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlJhdGVMaW1pdHMubWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF0KaXMgdXBkYXRlZC4KCkdlbmVyYXRlZCBmcm9tIHByb3RvYnVmIGZpZWxkIDxjb2RlPmludDMyIG1heF9idXJzdF9zaXplID0gMjs8L2NvZGU+IjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjI1O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTc6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpnZXRNYXhCdXJzdFNpemUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJnZXRNYXhCdXJzdFNpemUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjMxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTc6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpzZXRNYXhCdXJzdFNpemUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzI6Ik91dHB1dCBvbmx5LiBUaGUgbWF4IGJ1cnN0IHNpemUuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE3NDA6Ik1heCBidXJzdCBzaXplIGxpbWl0cyBob3cgZmFzdCB0YXNrcyBpbiBxdWV1ZSBhcmUgcHJvY2Vzc2VkIHdoZW4KbWFueSB0YXNrcyBhcmUgaW4gdGhlIHF1ZXVlIGFuZCB0aGUgcmF0ZSBpcyBoaWdoLiBUaGlzIGZpZWxkCmFsbG93cyB0aGUgcXVldWUgdG8gaGF2ZSBhIGhpZ2ggcmF0ZSBzbyBwcm9jZXNzaW5nIHN0YXJ0cyBzaG9ydGx5CmFmdGVyIGEgdGFzayBpcyBlbnF1ZXVlZCwgYnV0IHN0aWxsIGxpbWl0cyByZXNvdXJjZSB1c2FnZSB3aGVuCm1hbnkgdGFza3MgYXJlIGVucXVldWVkIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUuClRoZSBbdG9rZW4gYnVja2V0XShodHRwczovL3dpa2lwZWRpYS5vcmcvd2lraS9Ub2tlbl9CdWNrZXQpCmFsZ29yaXRobSBpcyB1c2VkIHRvIGNvbnRyb2wgdGhlIHJhdGUgb2YgdGFzayBkaXNwYXRjaGVzLiBFYWNoCnF1ZXVlIGhhcyBhIHRva2VuIGJ1Y2tldCB0aGF0IGhvbGRzIHRva2VucywgdXAgdG8gdGhlIG1heGltdW0Kc3BlY2lmaWVkIGJ5IGBtYXhfYnVyc3Rfc2l6ZWAuIEVhY2ggdGltZSBhIHRhc2sgaXMgZGlzcGF0Y2hlZCwgYQp0b2tlbiBpcyByZW1vdmVkIGZyb20gdGhlIGJ1Y2tldC4gVGFza3Mgd2lsbCBiZSBkaXNwYXRjaGVkIHVudGlsCnRoZSBxdWV1ZSdzIGJ1Y2tldCBydW5zIG91dCBvZiB0b2tlbnMuIFRoZSBidWNrZXQgd2lsbCBiZQpjb250aW51b3VzbHkgcmVmaWxsZWQgd2l0aCBuZXcgdG9rZW5zIGJhc2VkIG9uClttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgpDbG91ZCBUYXNrcyB3aWxsIHBpY2sgdGhlIHZhbHVlIG9mIGBtYXhfYnVyc3Rfc2l6ZWAgYmFzZWQgb24gdGhlCnZhbHVlIG9mClttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdLgpGb3IgQXBwIEVuZ2luZSBxdWV1ZXMgdGhhdCB3ZXJlIGNyZWF0ZWQgb3IgdXBkYXRlZCB1c2luZwpgcXVldWUueWFtbC94bWxgLCBgbWF4X2J1cnN0X3NpemVgIGlzIGVxdWFsIHRvCltidWNrZXRfc2l6ZV0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjYnVja2V0X3NpemUpLgpTaW5jZSBgbWF4X2J1cnN0X3NpemVgIGlzIG91dHB1dCBvbmx5LCBpZgpbVXBkYXRlUXVldWVdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLkNsb3VkVGFza3MuVXBkYXRlUXVldWVdIGlzIGNhbGxlZCBvbiBhIHF1ZXVlCmNyZWF0ZWQgYnkgYHF1ZXVlLnlhbWwveG1sYCwgYG1heF9idXJzdF9zaXplYCB3aWxsIGJlIHJlc2V0IGJhc2VkCm9uIHRoZSB2YWx1ZSBvZgpbbWF4X3Rhc2tzX2Rpc3BhdGNoZWRfcGVyX3NlY29uZF1bZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuUmF0ZUxpbWl0cy5tYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXSwKcmVnYXJkbGVzcyBvZiB3aGV0aGVyClttYXhfdGFza3NfZGlzcGF0Y2hlZF9wZXJfc2Vjb25kXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5SYXRlTGltaXRzLm1heF90YXNrc19kaXNwYXRjaGVkX3Blcl9zZWNvbmRdCmlzIHVwZGF0ZWQuCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5pbnQzMiBtYXhfYnVyc3Rfc2l6ZSA9IDI7PC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czozOiJ2YXIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFRoaXMiOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjI1O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTc6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpzZXRNYXhCdXJzdFNpemUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJzZXRNYXhCdXJzdFNpemUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MzoidmFyIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjcwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NjM6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpnZXRNYXhDb25jdXJyZW50VGFza3MoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjIxOiJUaGUgbWF4aW11bSBudW1iZXIgb2YgY29uY3VycmVudCB0YXNrcyB0aGF0IENsb3VkIFRhc2tzIGFsbG93cwp0byBiZSBkaXNwYXRjaGVkIGZvciB0aGlzIHF1ZXVlLiBBZnRlciB0aGlzIHRocmVzaG9sZCBoYXMgYmVlbgpyZWFjaGVkLCBDbG91ZCBUYXNrcyBzdG9wcyBkaXNwYXRjaGluZyB0YXNrcyB1bnRpbCB0aGUgbnVtYmVyIG9mCmNvbmN1cnJlbnQgcmVxdWVzdHMgZGVjcmVhc2VzLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo1NTM6IklmIHVuc3BlY2lmaWVkIHdoZW4gdGhlIHF1ZXVlIGlzIGNyZWF0ZWQsIENsb3VkIFRhc2tzIHdpbGwgcGljayB0aGUKZGVmYXVsdC4KVGhlIG1heGltdW0gYWxsb3dlZCB2YWx1ZSBpcyA1LDAwMC4KVGhpcyBmaWVsZCBpcyBvdXRwdXQgb25seSBmb3IKW3B1bGwgcXVldWVzXVtnb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5QdWxsVGFyZ2V0XSBhbmQgYWx3YXlzIC0xLCB3aGljaCBpbmRpY2F0ZXMgbm8gbGltaXQuIE5vIG90aGVyCnF1ZXVlIHR5cGVzIGNhbiBoYXZlIGBtYXhfY29uY3VycmVudF90YXNrc2Agc2V0IHRvIC0xLgpUaGlzIGZpZWxkIGhhcyB0aGUgc2FtZSBtZWFuaW5nIGFzClttYXhfY29uY3VycmVudF9yZXF1ZXN0cyBpbiBxdWV1ZS55YW1sL3htbF0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwcGVuZ2luZS9kb2NzL3N0YW5kYXJkL3B5dGhvbi9jb25maWcvcXVldWVyZWYjbWF4X2NvbmN1cnJlbnRfcmVxdWVzdHMpLgoKR2VuZXJhdGVkIGZyb20gcHJvdG9idWYgZmllbGQgPGNvZGU+aW50MzIgbWF4X2NvbmN1cnJlbnRfdGFza3MgPSAzOzwvY29kZT4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MjU7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2MzoiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OmdldE1heENvbmN1cnJlbnRUYXNrcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjE6ImdldE1heENvbmN1cnJlbnRUYXNrcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyOTU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo2MzoiXEdvb2dsZVxDbG91ZFxUYXNrc1xWMmJldGEyXFJhdGVMaW1pdHM6OnNldE1heENvbmN1cnJlbnRUYXNrcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMjE6IlRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IHRhc2tzIHRoYXQgQ2xvdWQgVGFza3MgYWxsb3dzCnRvIGJlIGRpc3BhdGNoZWQgZm9yIHRoaXMgcXVldWUuIEFmdGVyIHRoaXMgdGhyZXNob2xkIGhhcyBiZWVuCnJlYWNoZWQsIENsb3VkIFRhc2tzIHN0b3BzIGRpc3BhdGNoaW5nIHRhc2tzIHVudGlsIHRoZSBudW1iZXIgb2YKY29uY3VycmVudCByZXF1ZXN0cyBkZWNyZWFzZXMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjU1MzoiSWYgdW5zcGVjaWZpZWQgd2hlbiB0aGUgcXVldWUgaXMgY3JlYXRlZCwgQ2xvdWQgVGFza3Mgd2lsbCBwaWNrIHRoZQpkZWZhdWx0LgpUaGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlIGlzIDUsMDAwLgpUaGlzIGZpZWxkIGlzIG91dHB1dCBvbmx5IGZvcgpbcHVsbCBxdWV1ZXNdW2dvb2dsZS5jbG91ZC50YXNrcy52MmJldGEyLlB1bGxUYXJnZXRdIGFuZCBhbHdheXMgLTEsIHdoaWNoIGluZGljYXRlcyBubyBsaW1pdC4gTm8gb3RoZXIKcXVldWUgdHlwZXMgY2FuIGhhdmUgYG1heF9jb25jdXJyZW50X3Rhc2tzYCBzZXQgdG8gLTEuClRoaXMgZmllbGQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgYXMKW21heF9jb25jdXJyZW50X3JlcXVlc3RzIGluIHF1ZXVlLnlhbWwveG1sXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYXBwZW5naW5lL2RvY3Mvc3RhbmRhcmQvcHl0aG9uL2NvbmZpZy9xdWV1ZXJlZiNtYXhfY29uY3VycmVudF9yZXF1ZXN0cykuCgpHZW5lcmF0ZWQgZnJvbSBwcm90b2J1ZiBmaWVsZCA8Y29kZT5pbnQzMiBtYXhfY29uY3VycmVudF90YXNrcyA9IDM7PC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czozOiJ2YXIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFRoaXMiOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjI1O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjM6IlxHb29nbGVcQ2xvdWRcVGFza3NcVjJiZXRhMlxSYXRlTGltaXRzOjpzZXRNYXhDb25jdXJyZW50VGFza3MoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIxOiJzZXRNYXhDb25jdXJyZW50VGFza3MiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MzoidmFyIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzE4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";