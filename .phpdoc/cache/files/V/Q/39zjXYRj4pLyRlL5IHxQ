1658673628
AwuilbDvXz%3A6da3d0857180c62c67f80b418c7075ec-f0b229b6a9c7d6c7d942e9b5116a4e89
s:50796:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f0b229b6a9c7d6c7d942e9b5116a4e89";s:39:" phpDocumentor\Reflection\Php\File name";s:30:"ImportProductSetsGcsSource.php";s:39:" phpDocumentor\Reflection\Php\File path";s:64:"vendor/google/cloud/Vision/src/V1/ImportProductSetsGcsSource.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13429:"<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vision/v1/product_search_service.proto

namespace Google\Cloud\Vision\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The Google Cloud Storage location for a csv file which preserves a list of
 * ImportProductSetRequests in each line.
 *
 * Generated from protobuf message <code>google.cloud.vision.v1.ImportProductSetsGcsSource</code>
 */
class ImportProductSetsGcsSource extends \Google\Protobuf\Internal\Message
{
    /**
     * The Google Cloud Storage URI of the input csv file.
     * The URI must start with `gs://`.
     * The format of the input csv file should be one image per line.
     * In each line, there are 8 columns.
     * 1.  image-uri
     * 2.  image-id
     * 3.  product-set-id
     * 4.  product-id
     * 5.  product-category
     * 6.  product-display-name
     * 7.  labels
     * 8.  bounding-poly
     * The `image-uri`, `product-set-id`, `product-id`, and `product-category`
     * columns are required. All other columns are optional.
     * If the `ProductSet` or `Product` specified by the `product-set-id` and
     * `product-id` values does not exist, then the system will create a new
     * `ProductSet` or `Product` for the image. In this case, the
     * `product-display-name` column refers to
     * [display_name][google.cloud.vision.v1.Product.display_name], the
     * `product-category` column refers to
     * [product_category][google.cloud.vision.v1.Product.product_category], and the
     * `labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
     * The `image-id` column is optional but must be unique if provided. If it is
     * empty, the system will automatically assign a unique id to the image.
     * The `product-display-name` column is optional. If it is empty, the system
     * sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
     * space (" "). You can update the `display_name` later by using the API.
     * If a `Product` with the specified `product-id` already exists, then the
     * system ignores the `product-display-name`, `product-category`, and `labels`
     * columns.
     * The `labels` column (optional) is a line containing a list of
     * comma-separated key-value pairs, in the following format:
     *     "key_1=value_1,key_2=value_2,...,key_n=value_n"
     * The `bounding-poly` column (optional) identifies one region of
     * interest from the image in the same manner as `CreateReferenceImage`. If
     * you do not specify the `bounding-poly` column, then the system will try to
     * detect regions of interest automatically.
     * At most one `bounding-poly` column is allowed per line. If the image
     * contains multiple regions of interest, add a line to the CSV file that
     * includes the same product information, and the `bounding-poly` values for
     * each region of interest.
     * The `bounding-poly` column must contain an even number of comma-separated
     * numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
     * non-negative integers for absolute bounding polygons, and float values
     * in [0, 1] for normalized bounding polygons.
     * The system will resize the image if the image resolution is too
     * large to process (larger than 20MP).
     *
     * Generated from protobuf field <code>string csv_file_uri = 1;</code>
     */
    private $csv_file_uri = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $csv_file_uri
     *           The Google Cloud Storage URI of the input csv file.
     *           The URI must start with `gs://`.
     *           The format of the input csv file should be one image per line.
     *           In each line, there are 8 columns.
     *           1.  image-uri
     *           2.  image-id
     *           3.  product-set-id
     *           4.  product-id
     *           5.  product-category
     *           6.  product-display-name
     *           7.  labels
     *           8.  bounding-poly
     *           The `image-uri`, `product-set-id`, `product-id`, and `product-category`
     *           columns are required. All other columns are optional.
     *           If the `ProductSet` or `Product` specified by the `product-set-id` and
     *           `product-id` values does not exist, then the system will create a new
     *           `ProductSet` or `Product` for the image. In this case, the
     *           `product-display-name` column refers to
     *           [display_name][google.cloud.vision.v1.Product.display_name], the
     *           `product-category` column refers to
     *           [product_category][google.cloud.vision.v1.Product.product_category], and the
     *           `labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
     *           The `image-id` column is optional but must be unique if provided. If it is
     *           empty, the system will automatically assign a unique id to the image.
     *           The `product-display-name` column is optional. If it is empty, the system
     *           sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
     *           space (" "). You can update the `display_name` later by using the API.
     *           If a `Product` with the specified `product-id` already exists, then the
     *           system ignores the `product-display-name`, `product-category`, and `labels`
     *           columns.
     *           The `labels` column (optional) is a line containing a list of
     *           comma-separated key-value pairs, in the following format:
     *               "key_1=value_1,key_2=value_2,...,key_n=value_n"
     *           The `bounding-poly` column (optional) identifies one region of
     *           interest from the image in the same manner as `CreateReferenceImage`. If
     *           you do not specify the `bounding-poly` column, then the system will try to
     *           detect regions of interest automatically.
     *           At most one `bounding-poly` column is allowed per line. If the image
     *           contains multiple regions of interest, add a line to the CSV file that
     *           includes the same product information, and the `bounding-poly` values for
     *           each region of interest.
     *           The `bounding-poly` column must contain an even number of comma-separated
     *           numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
     *           non-negative integers for absolute bounding polygons, and float values
     *           in [0, 1] for normalized bounding polygons.
     *           The system will resize the image if the image resolution is too
     *           large to process (larger than 20MP).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vision\V1\ProductSearchService::initOnce();
        parent::__construct($data);
    }

    /**
     * The Google Cloud Storage URI of the input csv file.
     * The URI must start with `gs://`.
     * The format of the input csv file should be one image per line.
     * In each line, there are 8 columns.
     * 1.  image-uri
     * 2.  image-id
     * 3.  product-set-id
     * 4.  product-id
     * 5.  product-category
     * 6.  product-display-name
     * 7.  labels
     * 8.  bounding-poly
     * The `image-uri`, `product-set-id`, `product-id`, and `product-category`
     * columns are required. All other columns are optional.
     * If the `ProductSet` or `Product` specified by the `product-set-id` and
     * `product-id` values does not exist, then the system will create a new
     * `ProductSet` or `Product` for the image. In this case, the
     * `product-display-name` column refers to
     * [display_name][google.cloud.vision.v1.Product.display_name], the
     * `product-category` column refers to
     * [product_category][google.cloud.vision.v1.Product.product_category], and the
     * `labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
     * The `image-id` column is optional but must be unique if provided. If it is
     * empty, the system will automatically assign a unique id to the image.
     * The `product-display-name` column is optional. If it is empty, the system
     * sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
     * space (" "). You can update the `display_name` later by using the API.
     * If a `Product` with the specified `product-id` already exists, then the
     * system ignores the `product-display-name`, `product-category`, and `labels`
     * columns.
     * The `labels` column (optional) is a line containing a list of
     * comma-separated key-value pairs, in the following format:
     *     "key_1=value_1,key_2=value_2,...,key_n=value_n"
     * The `bounding-poly` column (optional) identifies one region of
     * interest from the image in the same manner as `CreateReferenceImage`. If
     * you do not specify the `bounding-poly` column, then the system will try to
     * detect regions of interest automatically.
     * At most one `bounding-poly` column is allowed per line. If the image
     * contains multiple regions of interest, add a line to the CSV file that
     * includes the same product information, and the `bounding-poly` values for
     * each region of interest.
     * The `bounding-poly` column must contain an even number of comma-separated
     * numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
     * non-negative integers for absolute bounding polygons, and float values
     * in [0, 1] for normalized bounding polygons.
     * The system will resize the image if the image resolution is too
     * large to process (larger than 20MP).
     *
     * Generated from protobuf field <code>string csv_file_uri = 1;</code>
     * @return string
     */
    public function getCsvFileUri()
    {
        return $this->csv_file_uri;
    }

    /**
     * The Google Cloud Storage URI of the input csv file.
     * The URI must start with `gs://`.
     * The format of the input csv file should be one image per line.
     * In each line, there are 8 columns.
     * 1.  image-uri
     * 2.  image-id
     * 3.  product-set-id
     * 4.  product-id
     * 5.  product-category
     * 6.  product-display-name
     * 7.  labels
     * 8.  bounding-poly
     * The `image-uri`, `product-set-id`, `product-id`, and `product-category`
     * columns are required. All other columns are optional.
     * If the `ProductSet` or `Product` specified by the `product-set-id` and
     * `product-id` values does not exist, then the system will create a new
     * `ProductSet` or `Product` for the image. In this case, the
     * `product-display-name` column refers to
     * [display_name][google.cloud.vision.v1.Product.display_name], the
     * `product-category` column refers to
     * [product_category][google.cloud.vision.v1.Product.product_category], and the
     * `labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
     * The `image-id` column is optional but must be unique if provided. If it is
     * empty, the system will automatically assign a unique id to the image.
     * The `product-display-name` column is optional. If it is empty, the system
     * sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
     * space (" "). You can update the `display_name` later by using the API.
     * If a `Product` with the specified `product-id` already exists, then the
     * system ignores the `product-display-name`, `product-category`, and `labels`
     * columns.
     * The `labels` column (optional) is a line containing a list of
     * comma-separated key-value pairs, in the following format:
     *     "key_1=value_1,key_2=value_2,...,key_n=value_n"
     * The `bounding-poly` column (optional) identifies one region of
     * interest from the image in the same manner as `CreateReferenceImage`. If
     * you do not specify the `bounding-poly` column, then the system will try to
     * detect regions of interest automatically.
     * At most one `bounding-poly` column is allowed per line. If the image
     * contains multiple regions of interest, add a line to the CSV file that
     * includes the same product information, and the `bounding-poly` values for
     * each region of interest.
     * The `bounding-poly` column must contain an even number of comma-separated
     * numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
     * non-negative integers for absolute bounding polygons, and float values
     * in [0, 1] for normalized bounding polygons.
     * The system will resize the image if the image resolution is too
     * large to process (larger than 20MP).
     *
     * Generated from protobuf field <code>string csv_file_uri = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCsvFileUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->csv_file_uri = $var;

        return $this;
    }

}

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:23:"\Google\Cloud\Vision\V1";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\Google\Cloud\Vision\V1";s:36:" phpDocumentor\Reflection\Fqsen name";s:2:"V1";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:50:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"ImportProductSetsGcsSource";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:113:"The Google Cloud Storage location for a csv file which preserves a list of
ImportProductSetRequests in each line.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:94:"Generated from protobuf message <code>google.cloud.vision.v1.ImportProductSetsGcsSource</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:22:"Google\Cloud\Vision\V1";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:3:{s:7:"GPBType";s:32:"Google\Protobuf\Internal\GPBType";s:13:"RepeatedField";s:38:"Google\Protobuf\Internal\RepeatedField";s:7:"GPBUtil";s:32:"Google\Protobuf\Internal\GPBUtil";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Google\Protobuf\Internal\Message";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Message";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:65:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::$csv_file_uri";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:65:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::$csv_file_uri";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"csv_file_uri";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:51:"The Google Cloud Storage URI of the input csv file.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2531:"The URI must start with `gs://`.
The format of the input csv file should be one image per line.
In each line, there are 8 columns.
1.  image-uri
2.  image-id
3.  product-set-id
4.  product-id
5.  product-category
6.  product-display-name
7.  labels
8.  bounding-poly
The `image-uri`, `product-set-id`, `product-id`, and `product-category`
columns are required. All other columns are optional.
If the `ProductSet` or `Product` specified by the `product-set-id` and
`product-id` values does not exist, then the system will create a new
`ProductSet` or `Product` for the image. In this case, the
`product-display-name` column refers to
[display_name][google.cloud.vision.v1.Product.display_name], the
`product-category` column refers to
[product_category][google.cloud.vision.v1.Product.product_category], and the
`labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
The `image-id` column is optional but must be unique if provided. If it is
empty, the system will automatically assign a unique id to the image.
The `product-display-name` column is optional. If it is empty, the system
sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
space (" "). You can update the `display_name` later by using the API.
If a `Product` with the specified `product-id` already exists, then the
system ignores the `product-display-name`, `product-category`, and `labels`
columns.
The `labels` column (optional) is a line containing a list of
comma-separated key-value pairs, in the following format:
    "key_1=value_1,key_2=value_2,...,key_n=value_n"
The `bounding-poly` column (optional) identifies one region of
interest from the image in the same manner as `CreateReferenceImage`. If
you do not specify the `bounding-poly` column, then the system will try to
detect regions of interest automatically.
At most one `bounding-poly` column is allowed per line. If the image
contains multiple regions of interest, add a line to the CSV file that
includes the same product information, and the `bounding-poly` values for
each region of interest.
The `bounding-poly` column must contain an even number of comma-separated
numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
non-negative integers for absolute bounding polygons, and float values
in [0, 1] for normalized bounding polygons.
The system will resize the image if the image resolution is too
large to process (larger than 20MP).

Generated from protobuf field <code>string csv_file_uri = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"''";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:70;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:3:{s:65:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"Constructor.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3074:"{
    Optional. Data for populating the Message object.

    @type string $csv_file_uri
          The Google Cloud Storage URI of the input csv file.
          The URI must start with `gs://`.
          The format of the input csv file should be one image per line.
          In each line, there are 8 columns.
          1.  image-uri
          2.  image-id
          3.  product-set-id
          4.  product-id
          5.  product-category
          6.  product-display-name
          7.  labels
          8.  bounding-poly
          The `image-uri`, `product-set-id`, `product-id`, and `product-category`
          columns are required. All other columns are optional.
          If the `ProductSet` or `Product` specified by the `product-set-id` and
          `product-id` values does not exist, then the system will create a new
          `ProductSet` or `Product` for the image. In this case, the
          `product-display-name` column refers to
          [display_name][google.cloud.vision.v1.Product.display_name], the
          `product-category` column refers to
          [product_category][google.cloud.vision.v1.Product.product_category], and the
          `labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
          The `image-id` column is optional but must be unique if provided. If it is
          empty, the system will automatically assign a unique id to the image.
          The `product-display-name` column is optional. If it is empty, the system
          sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
          space (" "). You can update the `display_name` later by using the API.
          If a `Product` with the specified `product-id` already exists, then the
          system ignores the `product-display-name`, `product-category`, and `labels`
          columns.
          The `labels` column (optional) is a line containing a list of
          comma-separated key-value pairs, in the following format:
              "key_1=value_1,key_2=value_2,...,key_n=value_n"
          The `bounding-poly` column (optional) identifies one region of
          interest from the image in the same manner as `CreateReferenceImage`. If
          you do not specify the `bounding-poly` column, then the system will try to
          detect regions of interest automatically.
          At most one `bounding-poly` column is allowed per line. If the image
          contains multiple regions of interest, add a line to the CSV file that
          includes the same product information, and the `bounding-poly` values for
          each region of interest.
          The `bounding-poly` column must contain an even number of comma-separated
          numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
          non-negative integers for absolute bounding polygons, and float values
          in [0, 1] for normalized bounding polygons.
          The system will resize the image if the image resolution is too
          large to process (larger than 20MP).
}";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:65:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"NULL";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:128;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:67:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::getCsvFileUri()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:51:"The Google Cloud Storage URI of the input csv file.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2531:"The URI must start with `gs://`.
The format of the input csv file should be one image per line.
In each line, there are 8 columns.
1.  image-uri
2.  image-id
3.  product-set-id
4.  product-id
5.  product-category
6.  product-display-name
7.  labels
8.  bounding-poly
The `image-uri`, `product-set-id`, `product-id`, and `product-category`
columns are required. All other columns are optional.
If the `ProductSet` or `Product` specified by the `product-set-id` and
`product-id` values does not exist, then the system will create a new
`ProductSet` or `Product` for the image. In this case, the
`product-display-name` column refers to
[display_name][google.cloud.vision.v1.Product.display_name], the
`product-category` column refers to
[product_category][google.cloud.vision.v1.Product.product_category], and the
`labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
The `image-id` column is optional but must be unique if provided. If it is
empty, the system will automatically assign a unique id to the image.
The `product-display-name` column is optional. If it is empty, the system
sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
space (" "). You can update the `display_name` later by using the API.
If a `Product` with the specified `product-id` already exists, then the
system ignores the `product-display-name`, `product-category`, and `labels`
columns.
The `labels` column (optional) is a line containing a list of
comma-separated key-value pairs, in the following format:
    "key_1=value_1,key_2=value_2,...,key_n=value_n"
The `bounding-poly` column (optional) identifies one region of
interest from the image in the same manner as `CreateReferenceImage`. If
you do not specify the `bounding-poly` column, then the system will try to
detect regions of interest automatically.
At most one `bounding-poly` column is allowed per line. If the image
contains multiple regions of interest, add a line to the CSV file that
includes the same product information, and the `bounding-poly` values for
each region of interest.
The `bounding-poly` column must contain an even number of comma-separated
numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
non-negative integers for absolute bounding polygons, and float values
in [0, 1] for normalized bounding polygons.
The system will resize the image if the image resolution is too
large to process (larger than 20MP).

Generated from protobuf field <code>string csv_file_uri = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::getCsvFileUri()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"getCsvFileUri";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:185;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:67:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::setCsvFileUri()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:51:"The Google Cloud Storage URI of the input csv file.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2531:"The URI must start with `gs://`.
The format of the input csv file should be one image per line.
In each line, there are 8 columns.
1.  image-uri
2.  image-id
3.  product-set-id
4.  product-id
5.  product-category
6.  product-display-name
7.  labels
8.  bounding-poly
The `image-uri`, `product-set-id`, `product-id`, and `product-category`
columns are required. All other columns are optional.
If the `ProductSet` or `Product` specified by the `product-set-id` and
`product-id` values does not exist, then the system will create a new
`ProductSet` or `Product` for the image. In this case, the
`product-display-name` column refers to
[display_name][google.cloud.vision.v1.Product.display_name], the
`product-category` column refers to
[product_category][google.cloud.vision.v1.Product.product_category], and the
`labels` column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].
The `image-id` column is optional but must be unique if provided. If it is
empty, the system will automatically assign a unique id to the image.
The `product-display-name` column is optional. If it is empty, the system
sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a
space (" "). You can update the `display_name` later by using the API.
If a `Product` with the specified `product-id` already exists, then the
system ignores the `product-display-name`, `product-category`, and `labels`
columns.
The `labels` column (optional) is a line containing a list of
comma-separated key-value pairs, in the following format:
    "key_1=value_1,key_2=value_2,...,key_n=value_n"
The `bounding-poly` column (optional) identifies one region of
interest from the image in the same manner as `CreateReferenceImage`. If
you do not specify the `bounding-poly` column, then the system will try to
detect regions of interest automatically.
At most one `bounding-poly` column is allowed per line. If the image
contains multiple regions of interest, add a line to the CSV file that
includes the same product information, and the `bounding-poly` values for
each region of interest.
The `bounding-poly` column must contain an even number of comma-separated
numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use
non-negative integers for absolute bounding polygons, and float values
in [0, 1] for normalized bounding polygons.
The system will resize the image if the image resolution is too
large to process (larger than 20MP).

Generated from protobuf field <code>string csv_file_uri = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\Google\Cloud\Vision\V1\ImportProductSetsGcsSource::setCsvFileUri()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"setCsvFileUri";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:243;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";