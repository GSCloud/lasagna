1658673618
AwuilbDvXz%3A0b1fb2c3b90dff37c2bfb38ab3183010-9a4b49ba8dbc4880489d7ea96adfa3ab
s:67148:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"9a4b49ba8dbc4880489d7ea96adfa3ab";s:39:" phpDocumentor\Reflection\Php\File name";s:56:"__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab.php";s:39:" phpDocumentor\Reflection\Php\File path";s:61:"temp/__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab.php";s:41:" phpDocumentor\Reflection\Php\File source";s:39488:"<?php

class __localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab extends Mustache_Template
{
    private $lambdaHelper;

    public function renderInternal(Mustache_Context $context, $indent = '')
    {
        $this->lambdaHelper = new Mustache_LambdaHelper($this->mustache, $context);
        $buffer = '';

        $buffer .= $indent . '<script>
';
        $buffer .= $indent . '\'use strict\';
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '// polyfills
';
        $buffer .= $indent . 'Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(f,g){if(null==this)throw new TypeError(\'"this" is null or not defined\');var e=Object(this),b=e.length>>>0;if(0===b)return!1;var a=g|0;for(a=Math.max(0<=a?a:b-Math.abs(a),0);a<b;){var c=e[a],d=f;if(c===d||"number"===typeof c&&"number"===typeof d&&isNaN(c)&&isNaN(d))return!0;a++}return!1}});
';
        $buffer .= $indent . 'String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"")});
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '(function(w, d, undefined) {
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // add scroll progress bar element
';
        $buffer .= $indent . '  var pbar = "_" + Date.now();
';
        $buffer .= $indent . '  d.getElementsByTagName("body")[0].insertAdjacentHTML(
';
        $buffer .= $indent . '    "beforeend", \'<div class="progress-container"><div class="progress-bar" id="\' + pbar + \'"></div></div>\'
';
        $buffer .= $indent . '  );
';
        $buffer .= $indent . '  // scroll progress bar
';
        $buffer .= $indent . '  w.onscroll = function() {
';
        $buffer .= $indent . '    var winScroll = d.body.scrollTop || d.documentElement.scrollTop;
';
        $buffer .= $indent . '    var height = d.documentElement.scrollHeight - d.documentElement.clientHeight;
';
        $buffer .= $indent . '    var scrolled = (winScroll / height) * 100;
';
        $buffer .= $indent . '    if (d.getElementById(pbar)) d.getElementById(pbar).style.width = scrolled + "%";
';
        $buffer .= $indent . '  };
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // check network status
';
        $buffer .= $indent . '  function checkNetwork(e) {
';
        $buffer .= $indent . '    if ("onLine" in navigator) {
';
        $buffer .= $indent . '      if (navigator.onLine) {
';
        $buffer .= $indent . '        d.getElementsByTagName("html")[0].setAttribute("offline", false);
';
        $buffer .= $indent . '        d.getElementsByTagName("html")[0].setAttribute("online", true);
';
        $buffer .= $indent . '        if (d.getElementById("offline-message")) d.getElementById("offline-message").setAttribute("aria-hidden", true);
';
        $buffer .= $indent . '        if (w.GSC) w.GSC.offline = false;
';
        $buffer .= $indent . '        if (w.GSC) w.GSC.online = true;
';
        $buffer .= $indent . '      } else {
';
        $buffer .= $indent . '        d.getElementsByTagName("html")[0].setAttribute("offline", true);
';
        $buffer .= $indent . '        d.getElementsByTagName("html")[0].setAttribute("online", false);
';
        $buffer .= $indent . '        if (d.getElementById("offline-message")) d.getElementById("offline-message").setAttribute("aria-hidden", false);
';
        $buffer .= $indent . '        if (w.GSC) w.GSC.offline = true;
';
        $buffer .= $indent . '        if (w.GSC) w.GSC.online = false;
';
        $buffer .= $indent . '        if (w.GSC) w.GSC.loaderOff();
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // "online" feature detection and binding
';
        $buffer .= $indent . '  if ("onLine" in navigator) {
';
        $buffer .= $indent . '    w.addEventListener("load", function() {
';
        $buffer .= $indent . '      w.addEventListener("online", checkNetwork);
';
        $buffer .= $indent . '      w.addEventListener("offline", checkNetwork);
';
        $buffer .= $indent . '      checkNetwork();
';
        $buffer .= $indent . '    });
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // setCookie() general function
';
        $buffer .= $indent . '  if (typeof window.setCookie !== "function") window.setCookie = function(key, value, days) {
';
        $buffer .= $indent . '    if (key === undefined) return false;
';
        $buffer .= $indent . '    if (value === undefined) return false;
';
        $buffer .= $indent . '    if (days === undefined) days = 31;
';
        $buffer .= $indent . '    if (days == 0) { // session cookie      
';
        $buffer .= $indent . '      document.cookie = key + "=" + value + ";path=/";
';
        $buffer .= $indent . '    } else {
';
        $buffer .= $indent . '      var d1 = new Date().getTime();
';
        $buffer .= $indent . '      var d2 = d1 + (parseInt(days) * 86400 * 1000); // time is in miliseconds!
';
        $buffer .= $indent . '      document.cookie = key + "=" + value + ";path=/" + ";expires=" + new Date(d2).toGMTString();
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // getCookie() general function
';
        $buffer .= $indent . '  if (typeof window.getCookie !== "function") window.getCookie = function(key) {
';
        $buffer .= $indent . '    if (key === undefined) return false;
';
        $buffer .= $indent . '    var v = document.cookie.match(\'(^|;) ?\' + key + \'=([^;]*)(;|$)\');
';
        $buffer .= $indent . '    return v ? v[2] : null;
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  // delCookie() general function
';
        $buffer .= $indent . '  if (typeof window.delCookie !== "function") window.delCookie = function(key) {
';
        $buffer .= $indent . '    if (key === undefined) return false;
';
        $buffer .= $indent . '    var date = new Date();
';
        $buffer .= $indent . '    date.setTime(0);
';
        $buffer .= $indent . '    document.cookie = key + "=;path=/" + ";expires=" + date.toGMTString();
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  if (w.GSC) { // GSC namespace
';
        $buffer .= $indent . '    GSC.data = {};
';
        $buffer .= $indent . '    GSC.isadmin = ';
        // 'admin_group_admin' section
        $value = $context->find('admin_group_admin');
        $buffer .= $this->section03a2cb78adf693fb240638cbbc7ea15e($context, $indent, $value);
        // 'admin_group_admin' inverted section
        $value = $context->find('admin_group_admin');
        if (empty($value)) {
            
            $buffer .= 'false';
        }
        $buffer .= ';
';
        $buffer .= $indent . '    GSC.iseditor = ';
        // 'admin_group_editor' section
        $value = $context->find('admin_group_editor');
        $buffer .= $this->section03a2cb78adf693fb240638cbbc7ea15e($context, $indent, $value);
        // 'admin_group_editor' inverted section
        $value = $context->find('admin_group_editor');
        if (empty($value)) {
            
            $buffer .= 'false';
        }
        $buffer .= ';
';
        $buffer .= $indent . '    GSC.islogged = ';
        // 'admin' section
        $value = $context->find('admin');
        $buffer .= $this->section03a2cb78adf693fb240638cbbc7ea15e($context, $indent, $value);
        // 'admin' inverted section
        $value = $context->find('admin');
        if (empty($value)) {
            
            $buffer .= 'false';
        }
        $buffer .= ';
';
        $buffer .= $indent . '    GSC.istester = ';
        // 'admin_group_tester' section
        $value = $context->find('admin_group_tester');
        $buffer .= $this->section03a2cb78adf693fb240638cbbc7ea15e($context, $indent, $value);
        // 'admin_group_tester' inverted section
        $value = $context->find('admin_group_tester');
        if (empty($value)) {
            
            $buffer .= 'false';
        }
        $buffer .= ';
';
        $buffer .= $indent . '    GSC.profile = null;
';
        $buffer .= $indent . '    GSC.data.multisite_profiles = JSON.parse(\'';
        $value = $this->resolveValue($context->find('multisite_profiles_json'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '\'); 
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // feature detection: "touch"
';
        $buffer .= $indent . '    GSC.touch = ("ontouchstart" in w || w.DocumentTouch && d instanceof DocumentTouch) ? true : false;
';
        $buffer .= $indent . '    if (GSC.touch) d.getElementsByTagName("html")[0].setAttribute("touch", true);
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.FormatBytes()
';
        $buffer .= $indent . '    if (typeof GSC.FormatBytes !== "function") GSC.FormatBytes = function(number, precision) {
';
        $buffer .= $indent . '      number = parseInt(number);
';
        $buffer .= $indent . '      if (precision === undefined) precision = 2;
';
        $buffer .= $indent . '      if (!number) return "0";
';
        $buffer .= $indent . '      var c = 1024,
';
        $buffer .= $indent . '        e = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
';
        $buffer .= $indent . '        f = Math.floor(Math.log(number) / Math.log(c));
';
        $buffer .= $indent . '      return parseFloat((number / Math.pow(c, f)).toFixed(precision)) + "&nbsp;" + e[f];
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.GetTime()
';
        $buffer .= $indent . '    if (typeof GSC.GetTime !== "function") GSC.GetTime = function(dateString) {
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '      function englishExt(x) {
';
        $buffer .= $indent . '        x = ("" + x).slice(-1);
';
        $buffer .= $indent . '        if (x == 1) return "st";
';
        $buffer .= $indent . '        if (x == 2) return "nd";
';
        $buffer .= $indent . '        if (x == 3) return "rd";
';
        $buffer .= $indent . '        return "th";
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '      var dayz = ["", "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_1'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_2'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_3'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_4'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_5'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_6'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.day_of_the_week_7'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '"
';
        $buffer .= $indent . '      ];
';
        $buffer .= $indent . '      var monthz = ["", "';
        $value = $this->resolveValue($context->findDot('l.month_1'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_3'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_4'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.month_5'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_6'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_7'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_8'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_9'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.month_10'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_11'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_12'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '"
';
        $buffer .= $indent . '      ];
';
        $buffer .= $indent . '      var monthz2p = ["", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_1'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_2'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_3'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_4'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.month_2p_5'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_6'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_7'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_8'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_9'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '",
';
        $buffer .= $indent . '        "';
        $value = $this->resolveValue($context->findDot('l.month_2p_10'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_11'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '", "';
        $value = $this->resolveValue($context->findDot('l.month_2p_12'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '"
';
        $buffer .= $indent . '      ];
';
        $buffer .= $indent . '      if (dateString === undefined) {
';
        $buffer .= $indent . '        var z = new Date();
';
        $buffer .= $indent . '      } else {
';
        $buffer .= $indent . '        var z = new Date(dateString);
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      var x = {};
';
        $buffer .= $indent . '      x.day = ("" + z.getDay());
';
        $buffer .= $indent . '      x.day_str = dayz[z.getDay()];
';
        $buffer .= $indent . '      x.h = ("" + z.getHours());
';
        $buffer .= $indent . '      x.hh = ("0" + z.getHours()).slice(-2);
';
        $buffer .= $indent . '      x.yy = ("" + z.getFullYear()).slice(-2);
';
        $buffer .= $indent . '      x.yyyy = ("" + z.getFullYear());
';
        $buffer .= $indent . '      x.m = ("" + (z.getMonth() + 1));
';
        $buffer .= $indent . '      x.mm = ("0" + (z.getMonth() + 1)).slice(-2);
';
        $buffer .= $indent . '      x.month_str = monthz[x.m];
';
        $buffer .= $indent . '      x.month_str2p = monthz2p[x.m];
';
        $buffer .= $indent . '      x.d = z.getDate();
';
        $buffer .= $indent . '      x.dd = ("0" + z.getDate()).slice(-2);
';
        $buffer .= $indent . '      x.today = x.dd + "." + x.mm + "." + x.yyyy;
';
        $buffer .= $indent . '      if ("';
        $value = $this->resolveValue($context->find('langcs'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '") { // Czech locale
';
        $buffer .= $indent . '        x.today_str = x.day_str + " " + x.d + ". " + monthz2p[x.m] + " " + x.yyyy;
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      if ("';
        $value = $this->resolveValue($context->find('langen'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '") { // English locale
';
        $buffer .= $indent . '        x.today_str = x.day_str + " " + x.d + englishExt(x.d) + " " + monthz[x.m] + ", " + x.yyyy;
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      x.d = z;
';
        $buffer .= $indent . '      return x;
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.CopyClipboard()
';
        $buffer .= $indent . '    if (typeof GSC.CopyClipboard !== "function") GSC.CopyClipboard = function(data) {
';
        $buffer .= $indent . '      var el = d.createElement("textarea");
';
        $buffer .= $indent . '      el.value = data;
';
        $buffer .= $indent . '      el.setAttribute("readonly", "");
';
        $buffer .= $indent . '      el.style.position = "absolute";
';
        $buffer .= $indent . '      el.style.left = "-9999px";
';
        $buffer .= $indent . '      d.body.appendChild(el);
';
        $buffer .= $indent . '      var selected =
';
        $buffer .= $indent . '        d.getSelection().rangeCount > 0 ? d.getSelection().getRangeAt(0) : false;
';
        $buffer .= $indent . '      el.select();
';
        $buffer .= $indent . '      d.execCommand("copy");
';
        $buffer .= $indent . '      d.body.removeChild(el);
';
        $buffer .= $indent . '      if (selected) {
';
        $buffer .= $indent . '        d.getSelection().removeAllRanges();
';
        $buffer .= $indent . '        d.getSelection().addRange(selected);
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.GetFileExtension() - parse filename and get a file extension
';
        $buffer .= $indent . '    if (typeof GSC.GetFileExtension !== "function") GSC.GetFileExtension = function(filename) {
';
        $buffer .= $indent . '      if (filename) {
';
        $buffer .= $indent . '          return filename.slice((filename.lastIndexOf(".") - 1 >>> 0) + 2);
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      return "";
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.CopyThisText() - copy text from an element to clipboard / or copy data element
';
        $buffer .= $indent . '    if (typeof GSC.CopyThisText !== "function") GSC.CopyThisText = function(that) {
';
        $buffer .= $indent . '      if (that) {
';
        $buffer .= $indent . '        var t = $(that).data("copy").trim();
';
        $buffer .= $indent . '        if (!t) t = $(that).text().trim();
';
        $buffer .= $indent . '        GSC.CopyClipboard(t);
';
        $buffer .= $indent . '        M.toast({html: "📋 " + t});
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.CopyThisHtml() - copy HTML from an element to clipboard
';
        $buffer .= $indent . '    if (typeof GSC.CopyThisHtml !== "function") GSC.CopyThisHtml = function(that) {
';
        $buffer .= $indent . '      if (that) {
';
        $buffer .= $indent . '        var t = $(that).text().trim();
';
        $buffer .= $indent . '        var h = $(that).html().trim();
';
        $buffer .= $indent . '        GSC.CopyClipboard(h);
';
        $buffer .= $indent . '        M.toast({html: "📋 " + t});
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '    }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.VersionCheck()
';
        $buffer .= $indent . '    GSC.init.push(function() {
';
        $buffer .= $indent . '      GSC.names.push("GSC.VersionCheck()");
';
        $buffer .= $indent . '      if (typeof GSC.VersionCheck !== "function") GSC.VersionCheck = function() {
';
        $buffer .= $indent . '        if (!GSC.offline) {
';
        $buffer .= $indent . '          $.post("/version/core", function(post) {
';
        $buffer .= $indent . '            if (post.data.LASAGNA.core.version) {
';
        $buffer .= $indent . '              if (post.data.LASAGNA.core.version != GSC.LASAGNA.core.version) {
';
        $buffer .= $indent . '                $("#update-message").show();
';
        $buffer .= $indent . '                GSC.VersionCheck = function () {};
';
        $buffer .= $indent . '                //console.log("UPDATE: core version check failed!");
';
        $buffer .= $indent . '                return;
';
        $buffer .= $indent . '              }
';
        $buffer .= $indent . '            }
';
        $buffer .= $indent . '          });
';
        $buffer .= $indent . '          $.post("/';
        $value = $this->resolveValue($context->find('lang'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '/version/data", function(post) {
';
        $buffer .= $indent . '            if (post.data.LASAGNA.data.version) {
';
        $buffer .= $indent . '              if (post.data.LASAGNA.data.version != GSC.LASAGNA.data.version) {
';
        $buffer .= $indent . '                $("#update-message").show();
';
        $buffer .= $indent . '                GSC.VersionCheck = function () {};
';
        $buffer .= $indent . '                //console.log("UPDATE: ';
        $value = $this->resolveValue($context->find('lang'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= ' data version check failed!");
';
        $buffer .= $indent . '                return;
';
        $buffer .= $indent . '              }
';
        $buffer .= $indent . '            }
';
        $buffer .= $indent . '          });
';
        $buffer .= $indent . '          //  do repeat checks
';
        $buffer .= $indent . '          setTimeout("GSC.VersionCheck();", 20000);
';
        $buffer .= $indent . '        }
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      //  do repeat checks
';
        $buffer .= $indent . '      setTimeout("GSC.VersionCheck()", 5000);
';
        $buffer .= $indent . '    });
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.SetProfile()
';
        $buffer .= $indent . '    GSC.init.push(function() {
';
        $buffer .= $indent . '      GSC.names.push("GSC.SetProfile()");
';
        $buffer .= $indent . '      if (typeof GSC.SetProfile !== "function") GSC.SetProfile = function() {
';
        $buffer .= $indent . '        var profiles = [];
';
        $buffer .= $indent . '        var params = new window.URLSearchParams(window.location.search);
';
        $buffer .= $indent . '        var profile = params.get("profile");
';
        $buffer .= $indent . '        for (var i in GSC.data.multisite_profiles) profiles.push(i);
';
        $buffer .= $indent . '        if (!profiles.includes(profile) && (GSC.isadmin === true)) {
';
        $buffer .= $indent . '            profile = getCookie("profile");
';
        $buffer .= $indent . '        }
';
        $buffer .= $indent . '        if (!profiles.includes(profile)) {
';
        $buffer .= $indent . '          profile = "default";
';
        $buffer .= $indent . '        }
';
        $buffer .= $indent . '        GSC.profile = profile;
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    });
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // GSC.ReadArticles() - read remote articles / create HTML parts
';
        $buffer .= $indent . '    GSC.init.push(function() {
';
        $buffer .= $indent . '      GSC.names.push("GSC.ReadArticles()");
';
        $buffer .= $indent . '      if (typeof GSC.ReadArticles !== "function") GSC.ReadArticles = function(callback) {
';
        $buffer .= $indent . '        if (GSC.summernote_on || GSC.offline) {
';
        $buffer .= $indent . '          //  do repeat checks
';
        $buffer .= $indent . '          setTimeout("GSC.ReadArticles();", 10000);
';
        $buffer .= $indent . '          return;
';
        $buffer .= $indent . '        }
';
        $buffer .= $indent . '        $.get("/ReadArticles/" + GSC.profile + "/';
        $value = $this->resolveValue($context->find('request_path_hash'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '?" +
';
        $buffer .= $indent . '            Date.now() + "&crc=" + (GSC.data.articlescrc || ""), function(data) {
';
        $buffer .= $indent . '          if (data && data.data) {
';
        $buffer .= $indent . '            localStorage["articles_" + GSC.profile + "_';
        $value = $this->resolveValue($context->find('request_path_hash'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '"] = data.data.html;
';
        $buffer .= $indent . '            if (data.data.crc) {
';
        $buffer .= $indent . '              GSC.data.articlescrc = data.data.crc;
';
        $buffer .= $indent . '              if (data.data.html != "") {
';
        $buffer .= $indent . '                var obj = jQuery.parseJSON(data.data.html);
';
        $buffer .= $indent . '                for (var p in obj) if (obj.hasOwnProperty(p)) {
';
        $buffer .= $indent . '                  if (obj[p] == "<p><br></p>") {
';
        $buffer .= $indent . '                    obj[p] = " ";
';
        $buffer .= $indent . '                  }
';
        $buffer .= $indent . '                  $("#" + p).html(obj[p]);
';
        $buffer .= $indent . '                }
';
        $buffer .= $indent . '                // fix classnames for Summernote
';
        $buffer .= $indent . '                $(".summernote ul").addClass("browser-default");
';
        $buffer .= $indent . '                $(".summernote img").addClass("responsive-img");
';
        $buffer .= $indent . '              } else {
';
        $buffer .= $indent . '                $(".summernote").html("");
';
        $buffer .= $indent . '              }
';
        $buffer .= $indent . '            }
';
        $buffer .= $indent . '          }
';
        $buffer .= $indent . '          if (typeof callback === "function") callback();
';
        $buffer .= $indent . '        });
';
        $buffer .= $indent . '        //  do repeat checks
';
        $buffer .= $indent . '        setTimeout("GSC.ReadArticles()", 10000);
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '      GSC.SetProfile();
';
        $buffer .= $indent . '      var a = "articles_" + GSC.profile + "_';
        $value = $this->resolveValue($context->find('request_path_hash'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '";
';
        $buffer .= $indent . '      if (localStorage && localStorage[a] && localStorage[a].length) {
';
        $buffer .= $indent . '          var obj = jQuery.parseJSON(localStorage[a]);
';
        $buffer .= $indent . '          for (var p in obj) if (obj.hasOwnProperty(p)) $("#" + p).html(obj[p]);
';
        $buffer .= $indent . '          $(".summernote ul").addClass("browser-default");
';
        $buffer .= $indent . '          $(".summernote img").addClass("responsive-img");
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      setTimeout("GSC.ReadArticles();", 1);
';
        $buffer .= $indent . '    });
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '    // DELAYED UI bindings
';
        $buffer .= $indent . '    GSC.init.push(function() {
';
        $buffer .= $indent . '      GSC.names.push("geneal UI - bindings");
';
        $buffer .= $indent . '      // set SK language
';
        $buffer .= $indent . '      $(".sethlsk").click(function() {
';
        $buffer .= $indent . '        setCookie("hl", "sk");
';
        $buffer .= $indent . '      });
';
        $buffer .= $indent . '      // set CS language
';
        $buffer .= $indent . '      $(".sethlcs").click(function() {
';
        $buffer .= $indent . '        setCookie("hl", "cs");
';
        $buffer .= $indent . '      });
';
        $buffer .= $indent . '      // set EN language
';
        $buffer .= $indent . '      $(".sethlen").click(function() {
';
        $buffer .= $indent . '        setCookie("hl", "en");
';
        $buffer .= $indent . '      });
';
        $buffer .= $indent . '      // set UPDATE button
';
        $buffer .= $indent . '      $("#update-message").click(function() {
';
        $buffer .= $indent . '        //window.location.replace("/admin/clearcache"); // too slow!
';
        $buffer .= $indent . '        location.reload();
';
        $buffer .= $indent . '      });
';
        $buffer .= $indent . '      // set default bullets for Summernote data
';
        $buffer .= $indent . '      $(".summernote>ul").each(function(i, obj) {
';
        $buffer .= $indent . '        $(obj).addClass("browser-default");
';
        $buffer .= $indent . '      });
';
        $buffer .= $indent . '      // create HOME button
';
        $buffer .= $indent . '      if (document.documentElement.clientWidth > 1023) {
';
        $buffer .= $indent . '        $(\'div.navbar-fixed>nav>div>ul\').prepend(\'<li><a title="';
        $value = $this->resolveValue($context->findDot('l.home'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '" href="/">🏡</a></li>\');
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '      // create mobile WebShare button for touch devices
';
        $buffer .= $indent . '      if (GSC.touch) {
';
        $buffer .= $indent . '        if (typeof window.WebShareFactory === "function") {
';
        $buffer .= $indent . '          $("#nav-mobile").append(\'<li class="right-align">\' + WebShareFactory() + \'</li>\');
';
        $buffer .= $indent . '          $(".webshareicon").append("';
        $value = $this->resolveValue($context->findDot('l.webshare_button'), $context);
        $buffer .= call_user_func($this->mustache->getEscape(), $value);
        $buffer .= '");
';
        $buffer .= $indent . '          $(".webshare-container").removeClass("hide").show();
';
        $buffer .= $indent . '        }
';
        $buffer .= $indent . '      }
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '      // create LOGIN buttons
';
        // 'LOCALHOST' section
        $value = $context->find('LOCALHOST');
        $buffer .= $this->section512800acfdc24b4e14865349d5ef0fee($context, $indent, $value);
        // 'LOCALHOST' inverted section
        $value = $context->find('LOCALHOST');
        if (empty($value)) {
            
            $buffer .= $indent . '      if (!GSC.islogged) {
';
            $buffer .= $indent . '        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="';
            $value = $this->resolveValue($context->find('goauth_redirect'), $context);
            $buffer .= call_user_func($this->mustache->getEscape(), $value);
            $buffer .= '">🔓 LOGIN</a></li>\');
';
            $buffer .= $indent . '        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right"><a title="';
            $value = $this->resolveValue($context->findDot('l.a_login_ttip'), $context);
            $buffer .= call_user_func($this->mustache->getEscape(), $value);
            $buffer .= '" href="';
            $value = $this->resolveValue($context->find('goauth_redirect'), $context);
            $buffer .= call_user_func($this->mustache->getEscape(), $value);
            $buffer .= '">&nbsp;🔓&nbsp;</a></div>\');
';
            $buffer .= $indent . '      } else {
';
            $buffer .= $indent . '        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="/logout">🔐 LOGOUT</a></li>\');
';
            $buffer .= $indent . '        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right hide-on-med-and-down"><a rel=nofollow title="';
            $value = $this->resolveValue($context->findDot('l.a_logout_ttip'), $context);
            $buffer .= call_user_func($this->mustache->getEscape(), $value);
            $buffer .= '" href="/logout">&nbsp;🔐&nbsp;</a></div>\');
';
            $buffer .= $indent . '      }
';
        }
        $buffer .= $indent . '    });
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '  }
';
        $buffer .= $indent . '})(window, document);
';
        $buffer .= $indent . '
';
        $buffer .= $indent . '</script>
';

        return $buffer;
    }

    private function section03a2cb78adf693fb240638cbbc7ea15e(Mustache_Context $context, $indent, $value)
    {
        $buffer = '';
    
        if (!is_string($value) && is_callable($value)) {
            $source = 'true';
            $result = call_user_func($value, $source, $this->lambdaHelper);
            if (strpos($result, '{{') === false) {
                $buffer .= $result;
            } else {
                $buffer .= $this->mustache
                    ->loadLambda((string) $result)
                    ->renderInternal($context);
            }
        } elseif (!empty($value)) {
            $values = $this->isIterable($value) ? $value : array($value);
            foreach ($values as $value) {
                $context->push($value);
                
                $buffer .= 'true';
                $context->pop();
            }
        }
    
        return $buffer;
    }

    private function section512800acfdc24b4e14865349d5ef0fee(Mustache_Context $context, $indent, $value)
    {
        $buffer = '';
    
        if (!is_string($value) && is_callable($value)) {
            $source = '
      if (!GSC.islogged) {
        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="{{ local_goauth_redirect }}">🔓 LOGIN</a></li>\');
        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right"><a title="{{ l.a_login_ttip }}" href="{{ local_goauth_redirect }}">&nbsp;🔓&nbsp;</a></div>\');
      } else {
        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="/logout">🔐 LOGOUT</a></li>\');
        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right hide-on-med-and-down"><a rel=nofollow title="{{ l.a_logout_ttip }}" href="/logout">&nbsp;🔐&nbsp;</a></div>\');
      }
      ';
            $result = call_user_func($value, $source, $this->lambdaHelper);
            if (strpos($result, '{{') === false) {
                $buffer .= $result;
            } else {
                $buffer .= $this->mustache
                    ->loadLambda((string) $result)
                    ->renderInternal($context);
            }
        } elseif (!empty($value)) {
            $values = $this->isIterable($value) ? $value : array($value);
            foreach ($values as $value) {
                $context->push($value);
                
                $buffer .= $indent . '      if (!GSC.islogged) {
';
                $buffer .= $indent . '        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="';
                $value = $this->resolveValue($context->find('local_goauth_redirect'), $context);
                $buffer .= call_user_func($this->mustache->getEscape(), $value);
                $buffer .= '">🔓 LOGIN</a></li>\');
';
                $buffer .= $indent . '        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right"><a title="';
                $value = $this->resolveValue($context->findDot('l.a_login_ttip'), $context);
                $buffer .= call_user_func($this->mustache->getEscape(), $value);
                $buffer .= '" href="';
                $value = $this->resolveValue($context->find('local_goauth_redirect'), $context);
                $buffer .= call_user_func($this->mustache->getEscape(), $value);
                $buffer .= '">&nbsp;🔓&nbsp;</a></div>\');
';
                $buffer .= $indent . '      } else {
';
                $buffer .= $indent . '        $(\'#nav-mobile\').append(\'<li class="right-align"><a rel=nofollow href="/logout">🔐 LOGOUT</a></li>\');
';
                $buffer .= $indent . '        $(\'.main-header\').append(\'<div style="padding:1em;z-index:99999999" class="right hide-on-med-and-down"><a rel=nofollow title="';
                $value = $this->resolveValue($context->findDot('l.a_logout_ttip'), $context);
                $buffer .= call_user_func($this->mustache->getEscape(), $value);
                $buffer .= '" href="/logout">&nbsp;🔐&nbsp;</a></div>\');
';
                $buffer .= $indent . '      }
';
                $context->pop();
            }
        }
    
        return $buffer;
    }

}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:53:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab";s:36:" phpDocumentor\Reflection\Fqsen name";s:52:"__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\Mustache_Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"Mustache_Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:68:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::$lambdaHelper";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:68:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::$lambdaHelper";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"lambdaHelper";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:3:{s:71:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::renderInternal()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::renderInternal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"renderInternal";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Mustache_Context";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"Mustache_Context";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"indent";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"''";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:96:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::section03a2cb78adf693fb240638cbbc7ea15e()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::section03a2cb78adf693fb240638cbbc7ea15e()";s:36:" phpDocumentor\Reflection\Fqsen name";s:39:"section03a2cb78adf693fb240638cbbc7ea15e";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Mustache_Context";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"Mustache_Context";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"indent";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"value";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:907;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:96:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::section512800acfdc24b4e14865349d5ef0fee()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__localhost_LASAGNA_c51eb2231273252ff4c36780e04070ab::section512800acfdc24b4e14865349d5ef0fee()";s:36:" phpDocumentor\Reflection\Fqsen name";s:39:"section512800acfdc24b4e14865349d5ef0fee";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Mustache_Context";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"Mustache_Context";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"indent";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"value";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:934;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";