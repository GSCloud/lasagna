1658673618
AwuilbDvXz%3A23dd12a3eab442a20b212d22340d5dfb-5a9ea195405b73fc7b2b6a83163600e3
s:24112:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"GSC Tesseract";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"category";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:9:"Framework";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:12:"Fred Brooker";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:18:"oscadal@gscloud.cz";s:14:" * description";N;}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:30:"MIT https://gscloud.cz/LICENSE";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"5a9ea195405b73fc7b2b6a83163600e3";s:39:" phpDocumentor\Reflection\Php\File name";s:12:"CiTester.php";s:39:" phpDocumentor\Reflection\Php\File path";s:16:"app/CiTester.php";s:41:" phpDocumentor\Reflection\Php\File source";s:8195:"<?php
/**
 * GSC Tesseract
 *
 * @category Framework
 * @author   Fred Brooker <oscadal@gscloud.cz>
 * @license  MIT https://gscloud.cz/LICENSE
 */

namespace GSC;

use League\CLImate\CLImate;

class CiTester
{
    /**
     * Main controller
     *
     * @param array $cfg Configuration.
     * @param array $presenter Presenter.
     * @param string $type Test type: testlocal, testprod.
     *
     * @return void
     */
    public function __construct($cfg, $presenter, $type)
    {
        \Tracy\Debugger::timer("CITEST");
        $climate = new CLImate;
        $cfg = (array) $cfg;
        $key = $cfg["ci_tester"]["api_key"] ?? "";
        $presenter = (array) $presenter;
        $type = (string) $type;

        switch ($type) {
            case "local":
            case "testlocal":
                $case = "local";
                $target = $cfg["test_origin"] ?? $cfg["local_goauth_origin"] ?? "";
                break;

            case "prod":
            case "testprod":
            default:
                $case = "production";
                $target = $cfg["goauth_origin"] ?? "";
        }
        if (!isset($cfg['app'])) {
            $climate->out("<red>FATAL ERROR: missing app definition!\n\007");
            exit;
        }
        if (!strlen($target)) {
            $climate->out("<bold><green>${cfg['app']} ${case}");
            $climate->out("<red>FATAL ERROR: missing target URI!\n\007");
            exit;
        }

        $climate->out("CI testing: <bold><green>${cfg['app']} ${case}\n");

        $i = 0;
        $pages = [];
        $redirects = [];
        foreach ($presenter as $p) {
            if (strpos($p["path"], "[") !== false) {
                $u = "<bold><blue>${target}${p['path']}</blue></bold>";
                $climate->out(
                    "${u};skipped"
                );
                continue;
            }
            if (strpos($p["path"], "*") !== false) {
                $u = "<bold><blue>${target}${p['path']}</blue></bold>";
                $climate->out(
                    "${u};skipped"
                );
                continue;
            }
            if ($p["redirect"] ?? false) {
                $redirects[$i]["path"] = $p["path"];
                $redirects[$i]["site"] = $target;
                $redirects[$i]["assert_httpcode"] = 303;
                if (stripos($p["redirect"], "http") === false) {
                    $redirects[$i]["url"] = $target . $p["path"];
                } else {
                    $redirects[$i]["url"] = $p["redirect"];
                }
            } else {
                $pages[$i]["path"] = $p["path"];
                $pages[$i]["site"] = $target;
                $pages[$i]["assert_httpcode"] = $p["assert_httpcode"];
                $pages[$i]["assert_json"] = $p["assert_json"];
                $pages[$i]["assert_values"] = $p["assert_values"];
                $pages[$i]["url"] = $target . $p["path"];
            }
            $i++;
        }
        ksort($pages);
        ksort($redirects);
        $pages_reworked = array_merge($redirects, $pages);

        // setup curl multi
        $i = 0;
        $ch = [];
        $multi = curl_multi_init();
        foreach ($pages_reworked as $x) {
            $ch[$i] = curl_init();
            curl_setopt($ch[$i], CURLOPT_URL, $x["url"] . "?api=${key}");
            curl_setopt($ch[$i], CURLINFO_HEADER_OUT, true);
            curl_setopt($ch[$i], CURLOPT_BUFFERSIZE, 4096);
            curl_setopt($ch[$i], CURLOPT_FAILONERROR, true);
            curl_setopt($ch[$i], CURLOPT_HEADER, true);
            curl_setopt($ch[$i], CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);
            curl_setopt($ch[$i], CURLOPT_MAXREDIRS, 5);
            curl_setopt($ch[$i], CURLOPT_NOBODY, false);
            curl_setopt($ch[$i], CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch[$i], CURLOPT_TIMEOUT, 20);
            curl_multi_add_handle($multi, $ch[$i]);
            $i++;
        }

        // wait for all curls to finish
        $active = null;
        do {
            $mrc = curl_multi_exec($multi, $active);
        } while ($mrc == CURLM_CALL_MULTI_PERFORM);
        while ($active && $mrc == CURLM_OK) {
            if (curl_multi_select($multi) != -1) {
                do {
                    $mrc = curl_multi_exec($multi, $active);
                } while ($mrc == CURLM_CALL_MULTI_PERFORM);
            }
        }

        // parse results
        $i = 0;
        $errors = 0;
        foreach ($pages_reworked as $x) {
            $bad = 0;
            $f1 = date("Y-m-d") . strtr("_${target}", '\/:.', '____');
            $f2 = date("Y-m-d") . strtr("_${target}_${x['path']}", '\/:.', '____');
            $u1 = "<bold>${x['site']}${x['path']}</bold>";
            $u2 = "${x['site']}${x['path']}";

            // get curl data
            $m = curl_multi_getcontent($ch[$i]);
            @file_put_contents(ROOT . "/ci/${f2}.curl.txt", $m);
            curl_multi_remove_handle($multi, $ch[$i]);

            // separate headers and content
            $information = explode("\r\n\r\n", $m);
            $headers = [];
            $content = [];
            foreach ($information as $index => $segment) {
                if (0 === mb_strpos($segment, "HTTP/", 0)) {
                    array_push($headers, $segment);
                } else {
                    array_push($content, $segment);
                }
            }
            $content = implode("\r\n\r\n", $content);
            $headers = implode("\r\n\r\n", $headers);
            $code = curl_getinfo($ch[$i], CURLINFO_HTTP_CODE);
            $time = round(curl_getinfo($ch[$i], CURLINFO_TOTAL_TIME) * 1000, 1);
            $length = strlen($content);

            // assert JSON
            $json = true;
            $jsformat = "HTML";
            $jscode = "-";
            if ($x["assert_json"]) {
                $arr = json_decode($content, true);
                if (is_null($arr)) {
                    $bad++;
                    $json = false;
                    $jsformat = "JSON_ERROR";
                    $climate->out('!!! JSON ERRROR !!!');
                    $climate->out($content);
                } else {
                    $jsformat = "JSON";
                    if ($arr["code"] == 200) {
                        $jscode = "200";
                    } else {
                        $jscode = "BAD_CODE:" . $arr["code"];
                        $bad++;
                        $climate->out('!!! JSON CODE ERRROR !!!');
                    }
                }
            }

            // assert HTTP code
            $http_code = true;
            if ($code != $x["assert_httpcode"]) {
                $bad++;
                $http_code = false;
                $climate->out('!!! HTTP CODE ERRROR !!!');
            }
            if ($bad == 0) { // OK
                $climate->out(
                    "${u1} length: <green>${length}</green> code: <green>${code}</green> time: <green>${time} ms</green> format: <blue>$jsformat</blue> JScode: <green>$jscode</green>"
                );
                @file_put_contents(ROOT . "/ci/tests_${f1}.assert.txt",
                    "${u2};length:${length};code:${code};assert:${x['assert_httpcode']};time:${time};$jsformat;$jscode\n", FILE_APPEND | LOCK_EX);
            } else { // error
                $errors++;
                $climate->out(
                    "<red>${u1} length: <bold>${length}</bold> code: <bold>${code}</bold> assert: <bold>${x['assert_httpcode']}</bold> time: ${time} ms format: $jsformat JScode: $jscode</red>\007"
                );
                @file_put_contents(ROOT . "/ci/errors_${f1}.assert.txt",
                    "${u2};length:${length};code:${code};assert:${x['assert_httpcode']};time:${time};format:$jsformat;jscode:$jscode\n", FILE_APPEND | LOCK_EX);
            }
            $i++;
        }
        curl_multi_close($multi);

        $time = round((float) \Tracy\Debugger::timer("CITEST"), 2);
        $climate->out("\nTotal time: <bold><green>$time s</green></bold>");

        if ($errors) {
            $climate->out("\nErrors: <bold>" . $errors . "\007\n");
        }
        exit($errors);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:4:"\GSC";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:4:"\GSC";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"GSC";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:13:"\GSC\CiTester";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:13:"\GSC\CiTester";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"CiTester";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:28:"\GSC\CiTester::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:15:"Main controller";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"cfg";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:14:"Configuration.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:9:"presenter";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:10:"Presenter.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"type";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:31:"Test type: testlocal, testprod.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:3:"GSC";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:1:{s:7:"CLImate";s:22:"League\CLImate\CLImate";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\GSC\CiTester::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"cfg";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"presenter";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"type";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:25;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:14;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";