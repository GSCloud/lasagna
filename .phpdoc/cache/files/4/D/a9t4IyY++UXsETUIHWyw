1658801427
AwuilbDvXz%3A72c976380314f4a7808243975ff83b7e-f8d9e5459cedf8f3e31323486d6540eb
s:113780:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f8d9e5459cedf8f3e31323486d6540eb";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"AppEngineRouting.php";s:39:" phpDocumentor\Reflection\Php\File path";s:58:"vendor/google/cloud/Tasks/src/V2beta2/AppEngineRouting.php";s:41:" phpDocumentor\Reflection\Php\File source";s:27688:"<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tasks/v2beta2/target.proto

namespace Google\Cloud\Tasks\V2beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * App Engine Routing.
 * For more information about services, versions, and instances see
 * [An Overview of App Engine](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine),
 * [Microservices Architecture on Google App Engine](https://cloud.google.com/appengine/docs/python/microservices-on-app-engine),
 * [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed),
 * and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
 *
 * Generated from protobuf message <code>google.cloud.tasks.v2beta2.AppEngineRouting</code>
 */
class AppEngineRouting extends \Google\Protobuf\Internal\Message
{
    /**
     * App service.
     * By default, the task is sent to the service which is the default
     * service when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string service = 1;</code>
     */
    private $service = '';
    /**
     * App version.
     * By default, the task is sent to the version which is the default
     * version when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string version = 2;</code>
     */
    private $version = '';
    /**
     * App instance.
     * By default, the task is sent to an instance which is available when
     * the task is attempted.
     * Requests can only be sent to a specific instance if
     * [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
     * App Engine Flex does not support instances. For more information, see
     * [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
     * and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
     *
     * Generated from protobuf field <code>string instance = 3;</code>
     */
    private $instance = '';
    /**
     * Output only. The host that the task is sent to.
     * For more information, see
     * [How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
     * The host is constructed as:
     * * `host = [application_domain_name]`</br>
     *   `| [service] + '.' + [application_domain_name]`</br>
     *   `| [version] + '.' + [application_domain_name]`</br>
     *   `| [version_dot_service]+ '.' + [application_domain_name]`</br>
     *   `| [instance] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_service] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
     * * `application_domain_name` = The domain name of the app, for
     *   example <app-id>.appspot.com, which is associated with the
     *   queue's project ID. Some tasks which were created using the App Engine
     *   SDK use a custom domain name.
     * * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `version_dot_service =`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
     * * `instance_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance_dot_version =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `instance_dot_version_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
     * to the service which is the default service when the task is attempted.
     * If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
     * to the version which is the default version when the task is attempted.
     * If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
     * will be sent to an instance which is available when the task is
     * attempted.
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
     * will be sent to the default version of the default service when
     * the task is attempted.
     *
     * Generated from protobuf field <code>string host = 4;</code>
     */
    private $host = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $service
     *           App service.
     *           By default, the task is sent to the service which is the default
     *           service when the task is attempted.
     *           For some queues or tasks which were created using the App Engine
     *           Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     *           into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     *           [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     *           [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     *           which were created using the App Engine SDK use a custom domain
     *           name; custom domains are not parsed by Cloud Tasks. If
     *           [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     *           [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     *           [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     *           [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *     @type string $version
     *           App version.
     *           By default, the task is sent to the version which is the default
     *           version when the task is attempted.
     *           For some queues or tasks which were created using the App Engine
     *           Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     *           into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     *           [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     *           [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     *           which were created using the App Engine SDK use a custom domain
     *           name; custom domains are not parsed by Cloud Tasks. If
     *           [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     *           [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     *           [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     *           [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *     @type string $instance
     *           App instance.
     *           By default, the task is sent to an instance which is available when
     *           the task is attempted.
     *           Requests can only be sent to a specific instance if
     *           [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
     *           App Engine Flex does not support instances. For more information, see
     *           [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
     *           and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
     *     @type string $host
     *           Output only. The host that the task is sent to.
     *           For more information, see
     *           [How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
     *           The host is constructed as:
     *           * `host = [application_domain_name]`</br>
     *             `| [service] + '.' + [application_domain_name]`</br>
     *             `| [version] + '.' + [application_domain_name]`</br>
     *             `| [version_dot_service]+ '.' + [application_domain_name]`</br>
     *             `| [instance] + '.' + [application_domain_name]`</br>
     *             `| [instance_dot_service] + '.' + [application_domain_name]`</br>
     *             `| [instance_dot_version] + '.' + [application_domain_name]`</br>
     *             `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
     *           * `application_domain_name` = The domain name of the app, for
     *             example <app-id>.appspot.com, which is associated with the
     *             queue's project ID. Some tasks which were created using the App Engine
     *             SDK use a custom domain name.
     *           * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     *           * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     *           * `version_dot_service =`
     *             [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *             [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     *           * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
     *           * `instance_dot_service =`
     *             [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *             [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     *           * `instance_dot_version =`
     *             [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *             [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     *           * `instance_dot_version_dot_service =`
     *             [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *             [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *             [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     *           If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
     *           to the service which is the default service when the task is attempted.
     *           If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
     *           to the version which is the default version when the task is attempted.
     *           If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
     *           will be sent to an instance which is available when the task is
     *           attempted.
     *           If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     *           [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
     *           [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
     *           will be sent to the default version of the default service when
     *           the task is attempted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Tasks\V2Beta2\Target::initOnce();
        parent::__construct($data);
    }

    /**
     * App service.
     * By default, the task is sent to the service which is the default
     * service when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string service = 1;</code>
     * @return string
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * App service.
     * By default, the task is sent to the service which is the default
     * service when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string service = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setService($var)
    {
        GPBUtil::checkString($var, True);
        $this->service = $var;

        return $this;
    }

    /**
     * App version.
     * By default, the task is sent to the version which is the default
     * version when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string version = 2;</code>
     * @return string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * App version.
     * By default, the task is sent to the version which is the default
     * version when the task is attempted.
     * For some queues or tasks which were created using the App Engine
     * Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
     * into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
     * which were created using the App Engine SDK use a custom domain
     * name; custom domains are not parsed by Cloud Tasks. If
     * [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
     * [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
     *
     * Generated from protobuf field <code>string version = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;

        return $this;
    }

    /**
     * App instance.
     * By default, the task is sent to an instance which is available when
     * the task is attempted.
     * Requests can only be sent to a specific instance if
     * [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
     * App Engine Flex does not support instances. For more information, see
     * [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
     * and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
     *
     * Generated from protobuf field <code>string instance = 3;</code>
     * @return string
     */
    public function getInstance()
    {
        return $this->instance;
    }

    /**
     * App instance.
     * By default, the task is sent to an instance which is available when
     * the task is attempted.
     * Requests can only be sent to a specific instance if
     * [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
     * App Engine Flex does not support instances. For more information, see
     * [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
     * and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
     *
     * Generated from protobuf field <code>string instance = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setInstance($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance = $var;

        return $this;
    }

    /**
     * Output only. The host that the task is sent to.
     * For more information, see
     * [How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
     * The host is constructed as:
     * * `host = [application_domain_name]`</br>
     *   `| [service] + '.' + [application_domain_name]`</br>
     *   `| [version] + '.' + [application_domain_name]`</br>
     *   `| [version_dot_service]+ '.' + [application_domain_name]`</br>
     *   `| [instance] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_service] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
     * * `application_domain_name` = The domain name of the app, for
     *   example <app-id>.appspot.com, which is associated with the
     *   queue's project ID. Some tasks which were created using the App Engine
     *   SDK use a custom domain name.
     * * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `version_dot_service =`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
     * * `instance_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance_dot_version =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `instance_dot_version_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
     * to the service which is the default service when the task is attempted.
     * If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
     * to the version which is the default version when the task is attempted.
     * If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
     * will be sent to an instance which is available when the task is
     * attempted.
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
     * will be sent to the default version of the default service when
     * the task is attempted.
     *
     * Generated from protobuf field <code>string host = 4;</code>
     * @return string
     */
    public function getHost()
    {
        return $this->host;
    }

    /**
     * Output only. The host that the task is sent to.
     * For more information, see
     * [How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
     * The host is constructed as:
     * * `host = [application_domain_name]`</br>
     *   `| [service] + '.' + [application_domain_name]`</br>
     *   `| [version] + '.' + [application_domain_name]`</br>
     *   `| [version_dot_service]+ '.' + [application_domain_name]`</br>
     *   `| [instance] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_service] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version] + '.' + [application_domain_name]`</br>
     *   `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
     * * `application_domain_name` = The domain name of the app, for
     *   example <app-id>.appspot.com, which is associated with the
     *   queue's project ID. Some tasks which were created using the App Engine
     *   SDK use a custom domain name.
     * * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `version_dot_service =`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
     * * `instance_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * * `instance_dot_version =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
     * * `instance_dot_version_dot_service =`
     *   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
     *   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
     *   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
     * to the service which is the default service when the task is attempted.
     * If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
     * to the version which is the default version when the task is attempted.
     * If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
     * will be sent to an instance which is available when the task is
     * attempted.
     * If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
     * [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
     * [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
     * will be sent to the default version of the default service when
     * the task is attempted.
     *
     * Generated from protobuf field <code>string host = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setHost($var)
    {
        GPBUtil::checkString($var, True);
        $this->host = $var;

        return $this;
    }

}

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:27:"\Google\Cloud\Tasks\V2beta2";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Google\Cloud\Tasks\V2beta2";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"V2beta2";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:44:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"AppEngineRouting";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"App Engine Routing.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:624:"For more information about services, versions, and instances see
[An Overview of App Engine](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine),
[Microservices Architecture on Google App Engine](https://cloud.google.com/appengine/docs/python/microservices-on-app-engine),
[App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed),
and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).

Generated from protobuf message <code>google.cloud.tasks.v2beta2.AppEngineRouting</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:26:"Google\Cloud\Tasks\V2beta2";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:3:{s:7:"GPBType";s:32:"Google\Protobuf\Internal\GPBType";s:13:"RepeatedField";s:38:"Google\Protobuf\Internal\RepeatedField";s:7:"GPBUtil";s:32:"Google\Protobuf\Internal\GPBUtil";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Google\Protobuf\Internal\Message";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Message";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:4:{s:54:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$service";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$service";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"service";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App service.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the service which is the default
service when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string service = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"''";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:41;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:54:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$version";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$version";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"version";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App version.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the version which is the default
version when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string version = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"''";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:60;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$instance";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$instance";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"instance";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"App instance.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:683:"By default, the task is sent to an instance which is available when
the task is attempted.
Requests can only be sent to a specific instance if
[manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
App Engine Flex does not support instances. For more information, see
[App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).

Generated from protobuf field <code>string instance = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"''";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:51:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$host";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::$host";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"host";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:47:"Output only. The host that the task is sent to.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2758:"For more information, see
[How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
The host is constructed as:
* `host = [application_domain_name]`</br>
  `| [service] + '.' + [application_domain_name]`</br>
  `| [version] + '.' + [application_domain_name]`</br>
  `| [version_dot_service]+ '.' + [application_domain_name]`</br>
  `| [instance] + '.' + [application_domain_name]`</br>
  `| [instance_dot_service] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
* `application_domain_name` = The domain name of the app, for
  example <app-id>.appspot.com, which is associated with the
  queue's project ID. Some tasks which were created using the App Engine
  SDK use a custom domain name.
* `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `version_dot_service =`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
* `instance_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance_dot_version =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `instance_dot_version_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
to the service which is the default service when the task is attempted.
If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
to the version which is the default version when the task is attempted.
If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
will be sent to an instance which is available when the task is
attempted.
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
will be sent to the default version of the default service when
the task is attempted.

Generated from protobuf field <code>string host = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"''";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:122;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:9:{s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"Constructor.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:6163:"{
    Optional. Data for populating the Message object.

    @type string $service
          App service.
          By default, the task is sent to the service which is the default
          service when the task is attempted.
          For some queues or tasks which were created using the App Engine
          Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
          into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
          [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
          [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
          which were created using the App Engine SDK use a custom domain
          name; custom domains are not parsed by Cloud Tasks. If
          [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
          [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
          [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
          [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
    @type string $version
          App version.
          By default, the task is sent to the version which is the default
          version when the task is attempted.
          For some queues or tasks which were created using the App Engine
          Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
          into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
          [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
          [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
          which were created using the App Engine SDK use a custom domain
          name; custom domains are not parsed by Cloud Tasks. If
          [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
          [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
          [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
          [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
    @type string $instance
          App instance.
          By default, the task is sent to an instance which is available when
          the task is attempted.
          Requests can only be sent to a specific instance if
          [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
          App Engine Flex does not support instances. For more information, see
          [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
          and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
    @type string $host
          Output only. The host that the task is sent to.
          For more information, see
          [How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
          The host is constructed as:
          * `host = [application_domain_name]`</br>
            `| [service] + '.' + [application_domain_name]`</br>
            `| [version] + '.' + [application_domain_name]`</br>
            `| [version_dot_service]+ '.' + [application_domain_name]`</br>
            `| [instance] + '.' + [application_domain_name]`</br>
            `| [instance_dot_service] + '.' + [application_domain_name]`</br>
            `| [instance_dot_version] + '.' + [application_domain_name]`</br>
            `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
          * `application_domain_name` = The domain name of the app, for
            example <app-id>.appspot.com, which is associated with the
            queue's project ID. Some tasks which were created using the App Engine
            SDK use a custom domain name.
          * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
          * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
          * `version_dot_service =`
            [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
            [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
          * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
          * `instance_dot_service =`
            [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
            [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
          * `instance_dot_version =`
            [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
            [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
          * `instance_dot_version_dot_service =`
            [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
            [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
            [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
          If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
          to the service which is the default service when the task is attempted.
          If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
          to the version which is the default version when the task is attempted.
          If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
          will be sent to an instance which is available when the task is
          attempted.
          If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
          [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
          [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
          will be sent to the default version of the default service when
          the task is attempted.
}";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"NULL";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:216;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getService()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App service.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the service which is the default
service when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string service = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getService()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"getService";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:240;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setService()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App service.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the service which is the default
service when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string service = 1;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setService()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"setService";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:265;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getVersion()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App version.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the version which is the default
version when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string version = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getVersion()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"getVersion";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:292;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setVersion()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"App version.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:962:"By default, the task is sent to the version which is the default
version when the task is attempted.
For some queues or tasks which were created using the App Engine
Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
which were created using the App Engine SDK use a custom domain
name; custom domains are not parsed by Cloud Tasks. If
[host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
[service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.

Generated from protobuf field <code>string version = 2;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setVersion()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"setVersion";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:317;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getInstance()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"App instance.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:683:"By default, the task is sent to an instance which is available when
the task is attempted.
Requests can only be sent to a specific instance if
[manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
App Engine Flex does not support instances. For more information, see
[App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).

Generated from protobuf field <code>string instance = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getInstance()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"getInstance";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:338;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setInstance()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"App instance.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:683:"By default, the task is sent to an instance which is available when
the task is attempted.
Requests can only be sent to a specific instance if
[manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
App Engine Flex does not support instances. For more information, see
[App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).

Generated from protobuf field <code>string instance = 3;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setInstance()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"setInstance";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:357;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getHost()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:47:"Output only. The host that the task is sent to.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2758:"For more information, see
[How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
The host is constructed as:
* `host = [application_domain_name]`</br>
  `| [service] + '.' + [application_domain_name]`</br>
  `| [version] + '.' + [application_domain_name]`</br>
  `| [version_dot_service]+ '.' + [application_domain_name]`</br>
  `| [instance] + '.' + [application_domain_name]`</br>
  `| [instance_dot_service] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
* `application_domain_name` = The domain name of the app, for
  example <app-id>.appspot.com, which is associated with the
  queue's project ID. Some tasks which were created using the App Engine
  SDK use a custom domain name.
* `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `version_dot_service =`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
* `instance_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance_dot_version =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `instance_dot_version_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
to the service which is the default service when the task is attempted.
If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
to the version which is the default version when the task is attempted.
If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
will be sent to an instance which is available when the task is
attempted.
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
will be sent to the default version of the default service when
the task is attempted.

Generated from protobuf field <code>string host = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::getHost()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"getHost";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:414;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setHost()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:47:"Output only. The host that the task is sent to.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:2758:"For more information, see
[How Requests are Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
The host is constructed as:
* `host = [application_domain_name]`</br>
  `| [service] + '.' + [application_domain_name]`</br>
  `| [version] + '.' + [application_domain_name]`</br>
  `| [version_dot_service]+ '.' + [application_domain_name]`</br>
  `| [instance] + '.' + [application_domain_name]`</br>
  `| [instance_dot_service] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version] + '.' + [application_domain_name]`</br>
  `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
* `application_domain_name` = The domain name of the app, for
  example <app-id>.appspot.com, which is associated with the
  queue's project ID. Some tasks which were created using the App Engine
  SDK use a custom domain name.
* `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `version_dot_service =`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
* `instance_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
* `instance_dot_version =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
* `instance_dot_version_dot_service =`
  [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
  [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
  [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
to the service which is the default service when the task is attempted.
If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
to the version which is the default version when the task is attempted.
If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
will be sent to an instance which is available when the task is
attempted.
If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
[version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
[instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
will be sent to the default version of the default service when
the task is attempted.

Generated from protobuf field <code>string host = 4;</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"var";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:35:"phpDocumentor\Reflection\Types\This":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Google\Cloud\Tasks\V2beta2\AppEngineRouting::setHost()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"setHost";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"var";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:469;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";