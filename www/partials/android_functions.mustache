<script>
(function (w, d, undefined) {

  // window.setCookie()
  if (typeof window.setCookie !== "function") window.setCookie = function (key, value, days) {
    if (key === undefined) return false;
    if (value === undefined) return false;
    if (days === undefined) days = 31;
    if (days === 0) {
      document.cookie = key + "=" + value + ";path=/";
    } else {
      var date = new Date();
      date.setTime(date.getTime() + (parseInt(days) * 86400));
      document.cookie = key + "=" + value + ";path=/" + ";expires=" + date.toGMTString();
    }
  }

  // window.getCookie()
  if (typeof window.getCookie !== "function") window.getCookie = function (key) {
    if (key === undefined) return false;
    var v = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
    return v ? v[2] : null;
  }

  // window.delCookie()
  if (typeof window.delCookie !== "function") window.delCookie = function (key) {
    if (key === undefined) return false;
    var date = new Date();
    date.setTime(0);
    document.cookie = key + "=;path=/" + ";expires=" + date.toGMTString();
  }

  if (GSC) {
    GSC.data = {};

    // GSC.FormatBytes()
    if (typeof GSC.FormatBytes !== "function") GSC.FormatBytes = function (number, precision) {
      number = parseInt(number);
      if (precision === undefined) precision = 2;
      if (!number) return "0";
      var c = 1024,
        e = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
        f = Math.floor(Math.log(number) / Math.log(c));
      return parseFloat((number / Math.pow(c, f)).toFixed(precision)) + "&nbsp;" + e[f];
    }

    // GSC.RemoveIframes()
    if (typeof GSC.RemoveIframes !== "function") GSC.RemoveIframes = function () {
      var iframes = document.querySelectorAll('iframe');
      for (var i = 0; i < iframes.length; i++) {
        iframes[i].parentNode.removeChild(iframes[i]);
      }
    }

    // GSC.GetTime()
    if (typeof GSC.GetTime !== "function") GSC.GetTime = function (dateString) {

      function englishext(x) {
        x = ("" + x).slice(-1);
        if (x == 1) return "st";
        if (x == 2) return "nd";
        if (x == 3) return "rd";
        return "th";
      }

      var dayz = ["", "{{l.day_of_the_week_1}}", "{{l.day_of_the_week_2}}", "{{l.day_of_the_week_3}}",
        "{{l.day_of_the_week_4}}", "{{l.day_of_the_week_5}}", "{{l.day_of_the_week_6}}",
        "{{l.day_of_the_week_7}}"
      ];
      var monthz = ["", "{{l.month_1}}", "{{l.month_2}}", "{{l.month_3}}", "{{l.month_4}}",
        "{{l.month_5}}", "{{l.month_6}}", "{{l.month_7}}", "{{l.month_8}}", "{{l.month_9}}",
        "{{l.month_10}}", "{{l.month_11}}", "{{l.month_12}}"
      ];
      var monthz2p = ["", "{{l.month_2p_1}}", "{{l.month_2p_2}}", "{{l.month_2p_3}}", "{{l.month_2p_4}}",
        "{{l.month_2p_5}}", "{{l.month_2p_6}}", "{{l.month_2p_7}}", "{{l.month_2p_8}}", "{{l.month_2p_9}}",
        "{{l.month_2p_10}}", "{{l.month_2p_11}}", "{{l.month_2p_12}}"
      ];
      if (dateString === undefined) {
        var z = new Date();
      } else {
        var z = new Date(dateString);
      }
      var x = {};
      x.day = ("" + z.getDay());
      x.day_str = dayz[z.getDay()];
      x.h = ("" + z.getHours());
      x.hh = ("0" + z.getHours()).slice(-2);
      x.yy = ("" + z.getFullYear()).slice(-2);
      x.yyyy = ("" + z.getFullYear());
      x.m = ("" + (z.getMonth() + 1));
      x.mm = ("0" + (z.getMonth() + 1)).slice(-2);
      x.month_str = monthz[x.m];
      x.month_str2p = monthz2p[x.m];
      x.d = z.getDate();
      x.dd = ("0" + z.getDate()).slice(-2);
      x.today = x.dd + "." + x.mm + "." + x.yyyy;
      if ("{{ langcs }}") { // Czech locale
        x.today_str = x.day_str + " " + x.d + ". " + monthz2p[x.m] + " " + x.yyyy;
      }
      if ("{{ langen }}") { // English locale
        x.today_str = x.day_str + " " + x.d + englishext(x.d) + " " + monthz[x.m] + ", " + x.yyyy;
      }
      x.d = z;
      return x;
    }

    if (typeof GSC.CopyClipboard !== "function") GSC.CopyClipboard = function (data) {
      var el = d.createElement("textarea");
      el.value = data;
      el.setAttribute("readonly", "");
      el.style.position = "absolute";
      el.style.left = "-9999px";
      d.body.appendChild(el);
      var selected =
        d.getSelection().rangeCount > 0 ? d.getSelection().getRangeAt(0) : false;
      el.select();
      d.execCommand("copy");
      d.body.removeChild(el);
      if (selected) {
        d.getSelection().removeAllRanges();
        d.getSelection().addRange(selected);
      }
    }

    // GSC.CopyThisText()
    if (typeof GSC.CopyThisText !== "function") GSC.CopyThisText = function (that) {
      if (that) {
        var t = $(that).text().trim();
        GSC.CopyClipboard(t);
        M.toast({html: t});
      }
    }

    // GSC.CopyThisHtml()
    if (typeof GSC.CopyThisHtml !== "function") GSC.CopyThisHtml = function (that) {
      if (that) {
        var t = $(that).text().trim();
        var h = $(that).html().trim();
        GSC.CopyClipboard(h);
        M.toast({html: t});
      }
    }
  }
})(window, document);

</script>
